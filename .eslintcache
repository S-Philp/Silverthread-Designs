[{"/Users/katydonoghue/Desktop/silver-thread-client/src/index.js":"1","/Users/katydonoghue/Desktop/silver-thread-client/src/App.js":"2","/Users/katydonoghue/Desktop/silver-thread-client/src/reportWebVitals.js":"3","/Users/katydonoghue/Desktop/silver-thread-client/src/common/redux/store.js":"4","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/SalesTable.jsx":"5","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/MaterialsTable.jsx":"6","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/reducers.js":"7","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getMaterials.js":"8","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddSales.jsx":"9","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/actions.js":"10","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getSales.js":"11"},{"size":828,"mtime":1608587726170,"results":"12","hashOfConfig":"13"},{"size":137,"mtime":1608568032480,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1608221967989,"results":"15","hashOfConfig":"13"},{"size":282,"mtime":1608586627866,"results":"16","hashOfConfig":"13"},{"size":6658,"mtime":1608593214433,"results":"17","hashOfConfig":"13"},{"size":2840,"mtime":1608590418738,"results":"18","hashOfConfig":"13"},{"size":708,"mtime":1608590907994,"results":"19","hashOfConfig":"13"},{"size":743,"mtime":1608586627868,"results":"20","hashOfConfig":"13"},{"size":162,"mtime":1608587237879,"results":"21","hashOfConfig":"13"},{"size":159,"mtime":1608590575937,"results":"22","hashOfConfig":"13"},{"size":722,"mtime":1608590615483,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1cflu80",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/katydonoghue/Desktop/silver-thread-client/src/index.js",[],["50","51"],"/Users/katydonoghue/Desktop/silver-thread-client/src/App.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/reportWebVitals.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/common/redux/store.js",["52","53"],"import { combineReducers, createStore } from \"redux\"\nimport { configureStore } from '@reduxjs/toolkit'\nimport materials from \"../../data-tables/framework/reducers\"\n\nconst reducers = {\n    ...materials\n}\n\nconst store = configureStore({\n    reducer: reducers,\n})\n\nexport default store","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/SalesTable.jsx",["54","55"],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/MaterialsTable.jsx",["56","57"],"import MaterialTable from 'material-table';\nimport { useEffect, useState } from 'react';\nimport {connect} from \"react-redux\"\nimport './MaterialsTable.css'\nimport { GetMaterials } from \"../use-cases/getMaterials\"\n\nconst MaterialsTable = ({onGetMaterials, materials}) => {\n\n  useEffect(() => {\n    //fetchMaterialsList()\n    onGetMaterials()\n  }, [])\n\n \n\n  const columns = [\n    { title: 'id', field: 'id', hidden: true },\n    { title: 'Name', field: 'name' },\n    { title: 'Description', field: 'description' },\n    { title: 'Price per Unit', field: 'unit_price' },\n    { title: 'Category', field: 'category' },\n  ]\n\n  const [data, setData] = useState([\n    { id: '1', name: 'Jump Ring', description: 'small jump ring', unit_price: '.23', category: 'fasteners' },\n    { id: '2', name: 'Blue Bead', description: 'small blue bead', unit_price: '.84', category: 'bead' },\n    { id: '3', name: 'Leather Chain', description: 'Leather', unit_price: '.3.68', category: 'chain' },\n  ])\n\n\n  return (\n    <div className='materialsContainer'>\n      <h1>Silverthread Materials </h1>\n      <MaterialTable\n        title=\"Silverthread Materials\"\n        columns={columns}\n        data={data}\n        options={{\n          search: false,\n          showTitle: false,\n          filtering: true,\n          addRowPosition: 'first',\n          exportButton: true,\n          //export csv is a function we can use to override the generic export and export to excel\n          // exportCsv\n          headerStyle: {\n            backgroundColor: '#78bfb5',\n            color: '#FFFFFF'\n          }\n        }}\n        editable={{\n          onRowAdd: newData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                setData([...data, newData]);\n                resolve();\n              }, 1000)\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataUpdate = [...data];\n                const index = oldData.tableData.id;\n                dataUpdate[index] = newData;\n                setData([...dataUpdate]);\n                resolve();\n              }, 1000)\n            }),\n          onRowDelete: oldData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n\n                resolve()\n              }, 1000)\n            }),\n        }}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, { }) => ({\n  materials: state.materials\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onGetMaterials: GetMaterials(dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialsTable)","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/reducers.js",["58"],"import { createReducer } from \"@reduxjs/toolkit\"\n\nimport {\n    onGetMaterials,\n    onGetSales,\n}from \"./actions\"\n\nexport const materials = createReducer(\n    {\n        materialsList: []\n    },\n    {\n        [onGetMaterials.type]: (state, {payload: material}) => {\n            if (material === null){\n                return state\n            }\n            state.materialsList = material\n        },\n    }\n)\n\nexport const sales = createReducer(\n    {\n       salesList: [] \n    }, \n    {\n        [onGetSales.type]: (state, {payload: sales}) => {\n            if (sales === null) {\n                return state\n            } \n            state.salesList = sales\n        }\n    }\n)\n\nexport default {materials, sales}","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getMaterials.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddSales.jsx",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/actions.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getSales.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":10,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"67","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":38},{"ruleId":"68","severity":1,"message":"69","line":28,"column":8,"nodeType":"70","endLine":28,"endColumn":10,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":176,"column":33,"nodeType":"74","messageId":"75","endLine":176,"endColumn":35},{"ruleId":"68","severity":1,"message":"76","line":12,"column":6,"nodeType":"70","endLine":12,"endColumn":8,"suggestions":"77"},{"ruleId":"72","severity":1,"message":"73","line":86,"column":33,"nodeType":"74","messageId":"75","endLine":86,"endColumn":36},{"ruleId":"78","severity":1,"message":"79","line":36,"column":1,"nodeType":"80","endLine":36,"endColumn":34},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","'createStore' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onGetSales'. Either include it or remove the dependency array. If 'onGetSales' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["83"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'onGetMaterials'. Either include it or remove the dependency array. If 'onGetMaterials' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["84"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [onGetSales]",{"range":"89","text":"90"},"Update the dependencies array to be: [onGetMaterials]",{"range":"91","text":"92"},[890,892],"[onGetSales]",[345,347],"[onGetMaterials]"]