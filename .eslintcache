[{"/Users/katydonoghue/Desktop/silver-thread-client/src/index.js":"1","/Users/katydonoghue/Desktop/silver-thread-client/src/App.js":"2","/Users/katydonoghue/Desktop/silver-thread-client/src/reportWebVitals.js":"3","/Users/katydonoghue/Desktop/silver-thread-client/src/common/redux/store.js":"4","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/reducers.js":"5","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/ProductsTable.jsx":"6","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/MaterialsTable.jsx":"7","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/SalesTable.jsx":"8","/Users/katydonoghue/Desktop/silver-thread-client/src/login/ui/logout.jsx":"9","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/Dashboard.jsx":"10","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/actions.js":"11","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getSales.js":"12","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteSale.js":"13","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddSales.jsx":"14","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/EditSales.jsx":"15","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/editSale.js":"16","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/addSale.js":"17","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteMaterial.js":"18","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getMaterials.js":"19","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteProduct.js":"20","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getProducts.js":"21","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/EditMaterials.jsx":"22","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddMaterials.jsx":"23","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddProducts.jsx":"24","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/editMaterial.js":"25","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/addMaterial.js":"26"},{"size":1383,"mtime":1608749500383,"results":"27","hashOfConfig":"28"},{"size":2852,"mtime":1608741251263,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1608221967989,"results":"30","hashOfConfig":"28"},{"size":432,"mtime":1608753980672,"results":"31","hashOfConfig":"28"},{"size":3060,"mtime":1608753980672,"results":"32","hashOfConfig":"28"},{"size":4186,"mtime":1608822820328,"results":"33","hashOfConfig":"28"},{"size":3834,"mtime":1608754863301,"results":"34","hashOfConfig":"28"},{"size":7871,"mtime":1608753980673,"results":"35","hashOfConfig":"28"},{"size":152,"mtime":1608741251265,"results":"36","hashOfConfig":"28"},{"size":7650,"mtime":1608822862646,"results":"37","hashOfConfig":"28"},{"size":623,"mtime":1608753980672,"results":"38","hashOfConfig":"28"},{"size":722,"mtime":1608670626462,"results":"39","hashOfConfig":"28"},{"size":817,"mtime":1608741369739,"results":"40","hashOfConfig":"28"},{"size":3672,"mtime":1608741369744,"results":"41","hashOfConfig":"28"},{"size":4421,"mtime":1608822862646,"results":"42","hashOfConfig":"28"},{"size":777,"mtime":1608675691953,"results":"43","hashOfConfig":"28"},{"size":1385,"mtime":1608675430910,"results":"44","hashOfConfig":"28"},{"size":821,"mtime":1608748950480,"results":"45","hashOfConfig":"28"},{"size":743,"mtime":1608586627868,"results":"46","hashOfConfig":"28"},{"size":803,"mtime":1608753980674,"results":"47","hashOfConfig":"28"},{"size":734,"mtime":1608753980674,"results":"48","hashOfConfig":"28"},{"size":3262,"mtime":1608822862646,"results":"49","hashOfConfig":"28"},{"size":3216,"mtime":1608822862645,"results":"50","hashOfConfig":"28"},{"size":8511,"mtime":1608831297029,"results":"51","hashOfConfig":"28"},{"size":781,"mtime":1608748950480,"results":"52","hashOfConfig":"28"},{"size":836,"mtime":1608748950479,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1cflu80",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/katydonoghue/Desktop/silver-thread-client/src/index.js",[],["114","115"],"/Users/katydonoghue/Desktop/silver-thread-client/src/App.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/reportWebVitals.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/common/redux/store.js",["116","117"],"import { combineReducers, createStore } from \"redux\"\nimport { configureStore } from '@reduxjs/toolkit'\nimport materials from \"../../data-tables/framework/reducers\"\nimport sales from \"../../data-tables/framework/reducers\"\nimport products from \"../../data-tables/framework/reducers\"\n\n\nconst reducers = {\n    ...materials,\n    ...sales,\n    ...products\n\n}\n\nconst store = configureStore({\n    reducer: reducers,\n})\n\nexport default store","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/reducers.js",["118"],"import { createReducer } from \"@reduxjs/toolkit\"\n\nimport {\n    onGetMaterials,\n    onAddMaterial,\n    onDeleteMaterial,\n    onEditMaterial,\n    onGetSales,\n    onDeleteSale,\n    onAddSale,\n    onEditSale,\n    onGetProducts,\n    onDeleteProduct,\n   \n}from \"./actions\"\n\nexport const materials = createReducer(\n    {\n        materialsList: [],\n        materialID: '',\n        materialAdd: '',\n        materialEdit: '',\n    },\n    {\n        [onGetMaterials.type]: (state, {payload: material}) => {\n            if (material === null){\n                return state\n            }\n            state.materialsList = material\n        },\n        [onDeleteMaterial.type]: (state, {payload: materialid}) => {\n            if (materialid === null) {               \n                return state\n            }\n            state.materialID = materialid\n        },\n        [onAddMaterial.type]: (state, {payload: materialDetails }) => {\n            if (materialDetails === null) {\n                return state\n            }\n            state.materialAdd = materialDetails\n        },\n        [onEditMaterial.type]: (state, {payload: materialEdits}) => {\n            if (materialEdits ===  null) {\n                return state\n            }\n            state.materialEdit = materialEdits\n        }\n    }\n)\n\nexport const sales = createReducer(\n    {\n       salesList: [],\n       saleID: '',      \n       saleEdits: {} \n    }, \n    {\n        [onGetSales.type]: (state, {payload: salesList}) => {\n            if (sales === null) {\n                return state\n            } \n            /*    sales.forEach((sale) => {\n                state.byId[sale.id] = sale\n            })*/\n            return {...state.salesList, salesList}\n        },\n        [onDeleteSale.type]: (state, {payload: saleid}) => {            \n            if (saleid === null) {\n                console.log(null)\n                return state\n            }\n            console.log(saleid)\n            state.saleID = saleid   \n        },\n        [onAddSale.type]: (state, {payload:newSaleId}) => {\n            if(newSaleId === null){\n                return state\n            }\n            state.newSaleId = newSaleId\n        },          \n        [onEditSale.type]: (state, {payload: saleDetails}) => {\n            if (saleDetails === null) {\n                return state\n            }\n            state.saleEdits = saleDetails\n        }\n    }\n)\n\nexport const products = createReducer(\n    {\n        productsList: [],\n        productsDelete: '',\n        productsAdd: '',\n        productsEdit: '',\n     }, \n     {\n        [onGetProducts.type]: (state, {payload: products}) => {\n            if (products === null){\n                return state\n            }            \n            state.productsList = products\n        },\n        [onDeleteProduct.type]: (state, {payload: productid}) => {\n            if (productid === null){\n                return state\n            }\n            console.log(productid)\n            state.productsDelete = productid\n        },\n\n     }\n)    \n\nexport default {materials, sales, products}","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/ProductsTable.jsx",["119","120","121"],"import MaterialTable from 'material-table';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\n\nimport Popover from '@material-ui/core/Popover';\n\nimport AddProducts from './AddProducts'\nimport {GetProducts} from '../use-cases/getProducts'\nimport {DeleteProduct} from '../use-cases/deleteProduct'\nimport { onDeleteProduct } from '../framework/actions';\n\n\nconst ProductsTable = ({ onGetProducts, products, onDeleteProduct, productDelete }) => {\n      \n    const [open, setOpen] = useState(false)\n    // const [data, setData] = useState([])\n    var tableData\n\n    //get products from db\n    useEffect(() => {\n        onGetProducts()\n    }, [productDelete])\n\n    tableData = products.map(data => ({\n        ...data\n    }))\n    \n\n        //sets column headers\n    const columns = [\n        { title: 'id', field: 'id', hidden: true },\n        { title: 'labor', field: 'labor', hidden: true },       \n        { title: 'Product Number', field: 'product_number' },\n        { title: 'Product Name', field: 'product_name' },\n        { title: 'Materials', field: '' },       \n        { title: 'Wholesale Price', field: 'wholesale' },\n        { title: 'Retail Price', field: 'retail_price' },\n        { title: 'Category', field: '' },\n        { title: 'Inventory', field: 'quantity' },    \n    ]\n\n    return (\n        <div className='productsContainer'>\n            <h1>Silverthread Products </h1>\n            <Popover\n                open={open}\n                anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <AddProducts />\n            </Popover>\n\n            <div className='productsMaterialTable'>\n                <MaterialTable\n                style={{backgroundColor:'#FFFFFF'}}\n                    title=\"Silverthread Products\"\n                    columns={columns}\n                    data={tableData}\n                    \n                    options={{\n                        search: false,\n                        showTitle: false,\n                        filtering: true,\n                        addRowPosition: 'first',\n                        exportButton: true,\n                        //export csv is a function we can use to override the generic export and export to excel\n                        // exportCsv\n                        headerStyle: {\n                            backgroundColor: '#f06292',\n                            color: '#FFFFFF'\n                        },\n                    }}\n                    actions={[\n                        {\n                            icon: 'add',\n                            tooltip: 'Add Product',\n                            isFreeAction: true,\n                            onClick: (event) => setOpen(true)\n                        },\n                        {\n                            icon: 'edit',\n                            tooltip: 'Edit Row',\n                            onClick: (event, rowData) => {\n                                console.log(rowData)                                \n                            }\n                        }\n                    ]}\n                    editable={{\n                        onRowDelete: oldData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    const id = oldData.id;                            \n                                    onDeleteProduct(id)\n                                    resolve()\n                                }, 1000)\n                            }),\n                    }}\n                />\n            </div>\n        </div >\n    )\n}\n\nconst mapStateToProps = (state, { }) => ({\n    products: state.products.productsList,\n    productDelete: state.products.productsDelete\n\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onGetProducts: GetProducts(dispatch),\n  onDeleteProduct: DeleteProduct(dispatch)\n  \n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsTable)","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/MaterialsTable.jsx",["122"],"import MaterialTable from 'material-table';\nimport { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\"\nimport './MaterialsTable.css'\nimport AddMaterials from './AddMaterials'\nimport EditMaterials from './EditMaterials'\nimport { GetMaterials } from \"../use-cases/getMaterials\"\nimport { DeleteMaterial } from \"../use-cases/deleteMaterial\"\nimport Popover from '@material-ui/core/Popover';\n\nconst MaterialsTable = ({ onGetMaterials, materials, onDeleteMaterial,  materialsDelete, materialsAdd, materialsEdit }) => {\n\n  const [openAdd, setOpenAdd] = useState(false)\n  const [openEdit, setOpenEdit] = useState(false)\n  const [rowData, setRowData] = useState()\n  \n\n  useEffect(() => {  \n    onGetMaterials()\n  }, [materialsDelete, materialsAdd, materialsEdit])\n\n  let tableData = materials.map(data => ({\n    ...data\n}))\n  const columns = [\n    { title: 'id', field: 'id', hidden: true },\n    { title: 'Name', field: 'material_name' },\n    { title: 'Unit', field: 'unit' },\n    { title: 'Price per Unit', field: 'unit_price' },\n    { title: 'Category', field: 'category' },\n    { title: 'Vendor', field: 'vendor' },\n    { title: 'Product Number', field: 'vendor_material_id' },\n  ]\n\n  return (\n    <div className='materialsContainer'>\n      <h1>Silverthread Materials </h1>\n      <Popover\n                open={openAdd}\n                anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <AddMaterials />\n            </Popover>\n\n            <Popover\n            open={openEdit}\n            anchorOrigin={{\n                vertical: 'center',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <EditMaterials materialData={rowData} />\n        </Popover>\n\n      <MaterialTable\n        style={{backgroundColor:'#FFFFFF'}}\n        title=\"Silverthread Materials\"\n        columns={columns}\n        data={tableData}\n        options={{\n          search: false,\n          showTitle: false,\n          filtering: true,\n          addRowPosition: 'first',\n          exportButton: true,\n          //export csv is a function we can use to override the generic export and export to excel\n          // exportCsv\n          headerStyle: {\n            backgroundColor: '#01579b',\n            // backgroundColor: '#78bfb5',\n            color: '#FFFFFF'\n          }\n        }}\n        actions={[\n          {\n              icon: 'add',\n              tooltip: 'Add Sale',\n              isFreeAction: true,\n              onClick: (event) => setOpenAdd(true)\n          },\n          {\n              icon: 'edit',\n              tooltip: 'Edit Row',\n              onClick: (event, rowData) => {\n                  setRowData(rowData)\n                  setOpenEdit(true)\n              }\n          },\n      ]}\n        editable={{        \n          onRowDelete: oldData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const id = oldData.id;\n                onDeleteMaterial(id)\n                resolve()\n              }, 1000)\n            }),\n        }}\n\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, {materials}) => ({\n  materials: state.materials.materialsList,\n  materialsDelete: state.materials.materialID,\n  materialsAdd: state.materials.materialAdd,\n  materialsEdit: state.materials.materialEdit\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onGetMaterials: GetMaterials(dispatch),\n  onDeleteMaterial: DeleteMaterial(dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialsTable)","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/SalesTable.jsx",["123","124","125","126","127"],"import MaterialTable from 'material-table';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport { setAutoFreeze } from 'immer'\n\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Popover from '@material-ui/core/Popover';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, } from '@material-ui/pickers';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './SalesTable.css'\nimport AddSales from './AddSales'\nimport EditSales from './EditSales'\nimport { GetSales } from '../use-cases/getSales';\nimport { DeleteSale } from '../use-cases/deleteSale';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\n\nconst SalesTable = ({ onGetSales, sales, onDeleteSale, salesAdd, salesEdit, salesDelete, }) => {\n    const classes = useStyles();\n \n    //set date for date-pickers\n    let end_date = new Date()\n    let start_date = new Date().setDate(end_date.getDate() - 30)\n\n    const [selectedDate, setSelectedDate] = useState({ start: start_date, end: end_date });\n    const [open, setOpen] = useState(false)\n    const [data, setData] = useState(sales)\n    const [openEdit, setOpenEdit] = useState(false)\n    const [rowData, setRowData] = useState()\n\n    var tableData\n\n    //get sales from db\n    useEffect(() => {\n        onGetSales()       \n    }, [salesAdd, salesEdit, salesDelete])\n\n    tableData = sales.map(data => ({\n        ...data\n    }))\n\n    //changes the start date of the reports\n    const handleStartDateChange = (date) => {\n        setSelectedDate({\n            ...selectedDate,\n            start: date\n        });\n    };\n\n    //changes the end date of the reports\n    const handleEndDateChange = (date) => {\n        setSelectedDate({\n            ...selectedDate,\n            end: date\n        });\n    };\n\n\n    //sets column headers\n    const columns = [\n        { title: 'id', field: 'id', hidden: true },\n        { title: 'Product ID', field: 'product_id', hidden: true },\n        { title: 'Date', field: 'createdAt' },\n        { title: 'Product Number', field: 'product_number' },\n        { title: 'Product Name', field: 'product_name' },\n        { title: 'Quantity', field: 'quantity' },\n        { title: 'Price per Unit', field: 'price_per_unit' },\n        { title: 'Total Sales Price', field: 'total_price' },\n        { title: 'Category', field: 'product_category' },\n        { title: 'Purchased By', field: 'sold_to' },\n    ]\n\n    return (\n        <div className='salesContainer'>\n            <h1>Silverthread Sales </h1>\n            <div className='datePickerContainer'>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <Grid container justify=\"space-around\" style={{backgroundColor:'#FFFFFF'}}>\n                        <KeyboardDatePicker\n                            style={{backgroundColor:'#FFFFFF'}}\n                            margin=\"normal\"\n                            name=\"start\"\n                            id=\"date-picker-dialog\"\n                            label=\"Start Date\"\n                            format=\"MM/dd/yyyy\"\n                            value={selectedDate.start}\n                            onChange={handleStartDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n\n                        <KeyboardDatePicker\n                            margin=\"normal\"\n                            name=\"end\"\n                            id=\"date-picker-dialog\"\n                            label=\"End Date\"\n                            format=\"MM/dd/yyyy\"\n                            value={selectedDate.end}\n                            onChange={handleEndDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </Grid>\n                </MuiPickersUtilsProvider>\n                <div className={classes.root} style={{backgroundColor:'#FFFFFF'}}>\n                    <Button variant=\"contained\" color=\"secondary\">\n                        Submit\n                </Button>\n                </div>\n            </div>\n\n            <Popover\n                open={open}\n                anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <AddSales />\n            </Popover>\n\n            {sales === [] ?\n                <div>Loading Data....</div>\n                :\n                <div className='salesMaterialTable'>\n                    <MaterialTable\n                        style={{backgroundColor:'#FFFFFF'}}\n                        title=\"Silverthread Sales\"\n                        columns={columns}\n                        data={tableData}\n\n                        options={{\n                            search: false,\n                            showTitle: false,\n                            filtering: true,\n                            addRowPosition: 'first',\n                            exportButton: true,\n                            //export csv is a function we can use to override the generic export and export to excel\n                            // exportCsv\n                            headerStyle: {\n                                backgroundColor: '#b71c1c',\n                                color: '#FFFFFF'\n                            },\n                        }}\n                        actions={[\n                            {\n                                icon: 'add',\n                                tooltip: 'Add Sale',\n                                isFreeAction: true,\n                                onClick: (event) => setOpen(true)\n                            },\n                            {\n                                icon: 'edit',\n                                tooltip: 'Edit Row',\n                                onClick: (event, rowData) => {\n                                    setRowData(rowData)\n                                    setOpenEdit(true)\n                                    console.log(rowData)\n                                }\n                            },\n                        ]}\n                        editable={{\n                            onRowDelete: oldData =>\n                                new Promise((resolve, reject) => {\n                                    setTimeout(() => {\n                                        const id = oldData.id;\n                                        onDeleteSale(id)\n                                        resolve()\n                                    }, 1000)\n                                }),\n                        }}\n                    />\n                </div>}\n        {/* </div> */}\n        <Popover\n            open={openEdit}\n            anchorOrigin={{\n                vertical: 'center',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n            <EditSales saleData={rowData} />\n        </Popover>\n        </div >\n    )\n}\n\nconst mapStateToProps = (state, { }) => ({\n    sales: state.sales.salesList,\n    salesAdd: state.sales.newSaleId,\n    salesEdit: state.sales.saleEdits,\n    salesDelete: state.sales.saleID,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    onGetSales: GetSales(dispatch),\n    onDeleteSale: DeleteSale(dispatch)\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SalesTable)","/Users/katydonoghue/Desktop/silver-thread-client/src/login/ui/logout.jsx",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/Dashboard.jsx",["128","129","130","131","132"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { VictoryPie, VictoryChart, VictoryLegend, VictoryLabel } from 'victory';\n\nconst data = [\n    { x: 1, y: 2 },\n    { x: 2, y: 2 },\n    { x: 3, y: 3 }\n  ];\n  const legendData = [{ name: \"Necklaces\" }, { name: \"Bracelets\" }, { name: \"Rings\" }];\n\n\nconst Dashboard = () => {\n    return (\n      <div>\n        <h1>Silverthread Products Sold</h1>\n        <svg color={\"white\"} width={500} height={400} style={{ border: \"1px solid #ccc\", backgroundColor: \"white\" }}>\n        {/* <h1>Silverthread Prodcuts Sold</h1> */}\n        {/* <div> */}\n        {/* <p>Silverthread Prodcuts Sold</p> */}\n          <VictoryLegend\n            standalone={false}\n            colorScale={[\"#78bfb5\", \"#f06292\", \"#b71c1c\"]}\n            x={20}\n            y={40}\n            gutter={20}\n            title=\"Legend\"\n            centerTitle\n            style={{ border: { stroke: \"black\" } }}\n            data={legendData}\n          />\n          <VictoryPie\n        //   titleComponent={\"Silverthread Prodcuts Sold\"}\n            // title=\"Silverthread Prodcuts Sold\"\n            // name=\"Silverthread Prodcuts Sold\"\n            standalone={false}\n            width={400}\n            height={300}\n            padding={{\n              left: 200,\n              bottom: 20,\n              top: 100\n            }}\n            colorScale={[\"#78bfb5\", \"#f06292\", \"#b71c1c\"]}\n            data={data}\n            labels={() => null}\n          />\n          {/* </div> */}\n        </svg>\n        </div>\n      );\n//     return (\n//         <div>\n// <VictoryChart>\n// <VictoryPie\n//   data={[\n//     { x: \"Necklaces\", y: 35, yourAttribute: \"#78bfb5\" },\n//     { x: \"Bracelets\", y: 40, yourAttribute: \"#f06292\" },\n//     { x: \"Earrings\", y: 55, yourAttribute: \"#b71c1c\" }\n//   ]}\n//   style={{\n//     data: {\n//       fill: (d) => d.slice.data.yourAttribute\n//     }\n//   }}\n// />\n// </VictoryChart>\n            {/* <VictoryPie\n  colorScale={[\"#78bfb5\", \"#f06292\", \"#01579b\", \"#b71c1c\", \"navy\" ]}\n  data={[\n    { x: \"Earrings\", y: 20 },\n    { x: \"Necklaces\", y: 22 },\n    { x: \"Bracelets\", y: 15 },\n    { x: \"Rings\", y: 10 },\n    { x: \"Other\", y: 20 },\n    { x: \"Mezuzzahs\", y: 2 },\n    { x: \"Brooches\", y: 1 },\n    { x: \"Chains\", y: 10 }\n  ]}\n/> */}\n    //     </div>\n    // )\n}\n\nexport default Dashboard\n\n\n// import * as React from 'react';\n// import Paper from '@material-ui/core/Paper';\n// import {\n//   Chart,\n//   PieSeries,\n// } from '@devexpress/dx-react-chart-material-ui';\n// import { withStyles } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography';\n// import NativeSelect from '@material-ui/core/NativeSelect';\n// import FormControl from '@material-ui/core/FormControl';\n// import {\n//   schemeCategory10,\n//   schemeAccent,\n//   schemeDark2,\n//   schemePaired,\n//   schemePastel1,\n//   schemePastel2,\n//   schemeSet1,\n//   schemeSet2,\n//   schemeSet3,\n// } from 'd3-scale-chromatic';\n\n// import { Palette } from '@devexpress/dx-react-chart';\n\n// const schemeCollection = [\n//   schemeCategory10,\n//   schemeAccent,\n//   schemeDark2,\n//   schemePaired,\n//   schemePastel1,\n//   schemePastel2,\n//   schemeSet1,\n//   schemeSet2,\n//   schemeSet3,\n// ];\n\n// const demoStyles = theme => ({\n//   typography: {\n//     marginTop: 0,\n//     marginBottom: theme.spacing(1),\n//   },\n//   div: {\n//     width: '200px',\n//     marginLeft: '50px',\n//     paddingBottom: '30px',\n//   },\n//   item: {\n//     width: '40px',\n//     height: '40px',\n//   },\n//   schemeConteiner: {\n//     display: 'flex',\n//     justifyContent: 'center',\n//     marginTop: theme.spacing(1),\n//   },\n// });\n\n// const data = [];\n// for (let i = 0; i < 15; i += 1) {\n//   data.push({ category: `item${i}`, val: 1 });\n// }\n\n// class Demo extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       data,\n//       scheme: schemeCollection[0],\n//     };\n\n//     this.changeScheme = this.changeScheme.bind(this);\n//   }\n\n//   changeScheme(e) {\n//     this.setState({ scheme: schemeCollection[e.target.value] });\n//   }\n\n//   render() {\n//     const { data: chartData, scheme } = this.state;\n//     const { classes } = this.props;\n\n//     return (\n//       <Paper>\n//         <Chart\n//           data={chartData}\n//         >\n//           <Palette scheme={scheme} />\n//           <PieSeries\n//             valueField=\"val\"\n//             argumentField=\"category\"\n//           />\n//         </Chart>\n//         <div className={classes.schemeConteiner}>\n//           {scheme.map(color => (\n//             <div\n//               key={color}\n//               className={classes.item}\n//               style={{ backgroundColor: color }}\n//             />\n//           ))}\n//         </div>\n//         <div className={classes.div}>\n//           <Typography component=\"h5\" variant=\"h5\" className={classes.typography}>Scheme</Typography>\n//           <FormControl>\n//             <NativeSelect onChange={this.changeScheme} defaultValue={0}>\n//               <option value={0}>schemeCategory10</option>\n//               <option value={1}>schemeAccent</option>\n//               <option value={2}>schemeDark2</option>\n//               <option value={3}>schemePaired</option>\n//               <option value={4}>schemePastel1</option>\n//               <option value={5}>schemePastel2</option>\n//               <option value={6}>schemeSet1</option>\n//               <option value={7}>schemeSet2</option>\n//               <option value={8}>schemeSet3</option>\n//             </NativeSelect>\n//           </FormControl>\n//         </div>\n//       </Paper>\n//     );\n//   }\n// }\n\n// export default withStyles(demoStyles, { name: 'Demo' })(Demo);\n\n\n// import * as React from 'react';\n// import Paper from '@material-ui/core/Paper';\n// import {\n//   Chart,\n//   PieSeries,\n// } from '@devexpress/dx-react-chart-material-ui';\n// import { Palette } from '@devexpress/dx-react-chart';\n// import { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\n\n\n// const theme = createMuiTheme({\n//     palette: {\n//       background: {\n//         paper: \"#FFFFFF\"\n//         // paper: \"#bdbdbd\"\n//         // paper: \"#616161\" // gray\n//       },\n//        primary: {\n//         //  main: \"#4db6ac\" //turquoise\n//          main: \"#78bfb5\", //other turquoise\n//          contrastText: \"#FFFFFF\"\n//         //  main: \"#f06292\" //pink\n//                  },\n//        secondary: {\n//          main: \"#f06292\" //pink\n//           // main: \"#01579b\" //blue\n//           // main: \"#b71c1c\" //red\n//           // main: \"#f50057\" //dark pink\n//                   },\n//              },\n//   // fontFamily: font // as an aside, highly recommend importing roboto font for Material UI projects! Looks really nice\n//   });\n\n// const data = [\n//   { country: 'Necklaces', area: 12 },\n//   { country: 'Rings', area: 7 },\n//   { country: 'Earrings', area: 7 },\n//   { country: 'Bracelettes', area: 7 },\n//   { country: 'Brazil', area: 6 },\n//   { country: 'Australia', area: 5 },\n//   { country: 'India', area: 2 },\n//   { country: 'Others', area: 55 },\n// ];\n// export default class Demo extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       data,\n//     };\n//   }\n\n//   render() {\n//     const { data: chartData } = this.state;\n\n//     return (\n//         <ThemeProvider theme={theme}>\n//       <Paper>\n//         <Chart\n//           data={chartData}\n//         >\n//           <PieSeries\n//             valueField=\"area\"\n//             argumentField=\"country\"\n//           />\n//         </Chart>\n//       </Paper>\n//       </ThemeProvider>\n//     );\n//   }\n// }","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/actions.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getSales.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteSale.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddSales.jsx",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/EditSales.jsx",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/editSale.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/addSale.js",["133"],"import { onAddSale } from \"../framework/actions\"\nimport { Popover } from '@material-ui/core';\n\n//This is a usecase for getting the list of sales\nexport const AddSale = (dispatch) => async (fields) => {\n   const newSale = {\n     /*  product_id: product_id \n     ^ gets product id from a fetch call to the products table route*/\n      product_number: fields.product_number,\n      product_name: fields.product_name,\n      product_category: fields.product_category,\n      price_per_unit: fields.price_per_unit,\n      quantity: fields.quantity,\n      total_price: fields.total_price,\n      sold_to: fields.sold_to,\n   }\n   console.log(\"NEW SALE UNDER THIS\")\n   console.log(newSale)\n\n   // first we call a fetch request to update our backend because the backend is the source of truth for our global state\n   try {\n      const response = await fetch(`http://localhost:8000/sales/addNewSale`, {\n         method: \"POST\",\n         headers: {\n            \"Content-Type\": \"application/json\",\n         },\n         body: JSON.stringify(newSale),\n      })\n\n      //need to await on parsing response to javascript objects from json\n      const success = await response.json()\n      console.log(success)\n\n      //pass into our action as a payload and we dispatch it\n      return dispatch(onAddSale(success))\n   } catch (e) {\n      console.log(\"CAUGHT ERROR IN PROMISE\")\n   }\n}\n\nexport default AddSale\n","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteMaterial.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getMaterials.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteProduct.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getProducts.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/EditMaterials.jsx",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddMaterials.jsx",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddProducts.jsx",["134","135","136","137"],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/editMaterial.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/addMaterial.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":10,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"146","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":38},{"ruleId":"147","severity":1,"message":"148","line":116,"column":1,"nodeType":"149","endLine":116,"endColumn":44},{"ruleId":"142","severity":1,"message":"150","line":10,"column":10,"nodeType":"144","messageId":"145","endLine":10,"endColumn":25},{"ruleId":"151","severity":1,"message":"152","line":22,"column":8,"nodeType":"153","endLine":22,"endColumn":23,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":110,"column":33,"nodeType":"157","messageId":"158","endLine":110,"endColumn":36},{"ruleId":"151","severity":1,"message":"159","line":20,"column":6,"nodeType":"153","endLine":20,"endColumn":52,"suggestions":"160"},{"ruleId":"142","severity":1,"message":"161","line":4,"column":10,"nodeType":"144","messageId":"145","endLine":4,"endColumn":23},{"ruleId":"142","severity":1,"message":"162","line":37,"column":12,"nodeType":"144","messageId":"145","endLine":37,"endColumn":16},{"ruleId":"142","severity":1,"message":"163","line":37,"column":18,"nodeType":"144","messageId":"145","endLine":37,"endColumn":25},{"ruleId":"151","severity":1,"message":"164","line":46,"column":8,"nodeType":"153","endLine":46,"endColumn":42,"suggestions":"165"},{"ruleId":"155","severity":1,"message":"156","line":208,"column":33,"nodeType":"157","messageId":"158","endLine":208,"endColumn":36},{"ruleId":"142","severity":1,"message":"166","line":2,"column":8,"nodeType":"144","messageId":"145","endLine":2,"endColumn":16},{"ruleId":"142","severity":1,"message":"167","line":3,"column":22,"nodeType":"144","messageId":"145","endLine":3,"endColumn":34},{"ruleId":"142","severity":1,"message":"168","line":3,"column":51,"nodeType":"144","messageId":"145","endLine":3,"endColumn":63},{"ruleId":"169","severity":1,"message":"170","line":68,"column":13,"nodeType":"171","messageId":"172","endLine":80,"endColumn":7},{"ruleId":"173","severity":1,"message":"174","line":68,"column":13,"nodeType":"171","messageId":"175","endLine":80,"endColumn":7},{"ruleId":"142","severity":1,"message":"176","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":17},{"ruleId":"142","severity":1,"message":"177","line":33,"column":26,"nodeType":"144","messageId":"145","endLine":33,"endColumn":41},{"ruleId":"142","severity":1,"message":"178","line":36,"column":12,"nodeType":"144","messageId":"145","endLine":36,"endColumn":20},{"ruleId":"142","severity":1,"message":"179","line":36,"column":22,"nodeType":"144","messageId":"145","endLine":36,"endColumn":33},{"ruleId":"151","severity":1,"message":"159","line":41,"column":8,"nodeType":"153","endLine":41,"endColumn":10,"suggestions":"180"},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","'createStore' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'onDeleteProduct' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onGetProducts'. Either include it or remove the dependency array. If 'onGetProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["183"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'onGetMaterials'. Either include it or remove the dependency array. If 'onGetMaterials' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["184"],"'setAutoFreeze' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onGetSales'. Either include it or remove the dependency array. If 'onGetSales' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["185"],"'ReactDOM' is defined but never used.","'VictoryChart' is defined but never used.","'VictoryLabel' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","'Popover' is defined but never used.","'setMaterialList' is assigned a value but never used.","'material' is assigned a value but never used.","'setMaterial' is assigned a value but never used.",["186"],"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [onGetProducts, productDelete]",{"range":"195","text":"196"},"Update the dependencies array to be: [materialsDelete, materialsAdd, materialsEdit, onGetMaterials]",{"range":"197","text":"198"},"Update the dependencies array to be: [salesAdd, salesEdit, salesDelete, onGetSales]",{"range":"199","text":"200"},"Update the dependencies array to be: [onGetMaterials]",{"range":"201","text":"202"},[669,684],"[onGetProducts, productDelete]",[730,776],"[materialsDelete, materialsAdd, materialsEdit, onGetMaterials]",[1486,1520],"[salesAdd, salesEdit, salesDelete, onGetSales]",[1408,1410],"[onGetMaterials]"]