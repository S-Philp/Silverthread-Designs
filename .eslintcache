[{"/Users/katydonoghue/Desktop/silver-thread-client/src/index.js":"1","/Users/katydonoghue/Desktop/silver-thread-client/src/App.js":"2","/Users/katydonoghue/Desktop/silver-thread-client/src/reportWebVitals.js":"3","/Users/katydonoghue/Desktop/silver-thread-client/src/common/redux/store.js":"4","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/SalesTable.jsx":"5","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/MaterialsTable.jsx":"6","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/reducers.js":"7","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getMaterials.js":"8","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddSales.jsx":"9","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/actions.js":"10","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getSales.js":"11","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteSale.js":"12"},{"size":828,"mtime":1608587726170,"results":"13","hashOfConfig":"14"},{"size":137,"mtime":1608568032480,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608221967989,"results":"16","hashOfConfig":"14"},{"size":355,"mtime":1608645880595,"results":"17","hashOfConfig":"14"},{"size":6811,"mtime":1608650778925,"results":"18","hashOfConfig":"14"},{"size":2840,"mtime":1608590418738,"results":"19","hashOfConfig":"14"},{"size":954,"mtime":1608645883041,"results":"20","hashOfConfig":"14"},{"size":743,"mtime":1608586627868,"results":"21","hashOfConfig":"14"},{"size":162,"mtime":1608587237879,"results":"22","hashOfConfig":"14"},{"size":219,"mtime":1608596490771,"results":"23","hashOfConfig":"14"},{"size":722,"mtime":1608590615483,"results":"24","hashOfConfig":"14"},{"size":766,"mtime":1608645876040,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1cflu80",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/katydonoghue/Desktop/silver-thread-client/src/index.js",[],["54","55"],"/Users/katydonoghue/Desktop/silver-thread-client/src/App.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/reportWebVitals.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/common/redux/store.js",["56","57"],"import { combineReducers, createStore } from \"redux\"\nimport { configureStore } from '@reduxjs/toolkit'\nimport materials from \"../../data-tables/framework/reducers\"\nimport sales from \"../../data-tables/framework/reducers\"\n\nconst reducers = {\n    ...materials,\n    ...sales,\n\n}\n\nconst store = configureStore({\n    reducer: reducers,\n})\n\nexport default store","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/SalesTable.jsx",["58","59","60"],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/MaterialsTable.jsx",["61","62"],"import MaterialTable from 'material-table';\nimport { useEffect, useState } from 'react';\nimport {connect} from \"react-redux\"\nimport './MaterialsTable.css'\nimport { GetMaterials } from \"../use-cases/getMaterials\"\n\nconst MaterialsTable = ({onGetMaterials, materials}) => {\n\n  useEffect(() => {\n    //fetchMaterialsList()\n    onGetMaterials()\n  }, [])\n\n \n\n  const columns = [\n    { title: 'id', field: 'id', hidden: true },\n    { title: 'Name', field: 'name' },\n    { title: 'Description', field: 'description' },\n    { title: 'Price per Unit', field: 'unit_price' },\n    { title: 'Category', field: 'category' },\n  ]\n\n  const [data, setData] = useState([\n    { id: '1', name: 'Jump Ring', description: 'small jump ring', unit_price: '.23', category: 'fasteners' },\n    { id: '2', name: 'Blue Bead', description: 'small blue bead', unit_price: '.84', category: 'bead' },\n    { id: '3', name: 'Leather Chain', description: 'Leather', unit_price: '.3.68', category: 'chain' },\n  ])\n\n\n  return (\n    <div className='materialsContainer'>\n      <h1>Silverthread Materials </h1>\n      <MaterialTable\n        title=\"Silverthread Materials\"\n        columns={columns}\n        data={data}\n        options={{\n          search: false,\n          showTitle: false,\n          filtering: true,\n          addRowPosition: 'first',\n          exportButton: true,\n          //export csv is a function we can use to override the generic export and export to excel\n          // exportCsv\n          headerStyle: {\n            backgroundColor: '#78bfb5',\n            color: '#FFFFFF'\n          }\n        }}\n        editable={{\n          onRowAdd: newData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                setData([...data, newData]);\n                resolve();\n              }, 1000)\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataUpdate = [...data];\n                const index = oldData.tableData.id;\n                dataUpdate[index] = newData;\n                setData([...dataUpdate]);\n                resolve();\n              }, 1000)\n            }),\n          onRowDelete: oldData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n\n                resolve()\n              }, 1000)\n            }),\n        }}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, { }) => ({\n  materials: state.materials\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onGetMaterials: GetMaterials(dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialsTable)","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/reducers.js",["63"],"import { createReducer } from \"@reduxjs/toolkit\"\n\nimport {\n    onGetMaterials,\n    onGetSales,\n    onDeleteSale,\n}from \"./actions\"\n\nexport const materials = createReducer(\n    {\n        materialsList: []\n    },\n    {\n        [onGetMaterials.type]: (state, {payload: material}) => {\n            if (material === null){\n                return state\n            }\n            state.materialsList = material\n        },\n    }\n)\n\nexport const sales = createReducer(\n    {\n       salesList: [],\n       saleID: '' \n    }, \n    {\n        [onGetSales.type]: (state, {payload: sales}) => {\n            if (sales === null) {\n                return state\n            } \n            state.salesList = sales\n        },\n        [onDeleteSale.type]: (state, {payload: saleid}) => {            \n            if (saleid === null) {\n                return state\n            }\n            state.saleID = saleid\n            \n        }\n    }\n)\n\nexport default {materials, sales}","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getMaterials.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddSales.jsx",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/actions.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getSales.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteSale.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":10,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"72","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":38},{"ruleId":"73","severity":1,"message":"74","line":41,"column":8,"nodeType":"75","endLine":41,"endColumn":10,"suggestions":"76"},{"ruleId":"68","severity":1,"message":"77","line":45,"column":11,"nodeType":"70","messageId":"71","endLine":45,"endColumn":25},{"ruleId":"78","severity":1,"message":"79","line":186,"column":33,"nodeType":"80","messageId":"81","endLine":186,"endColumn":36},{"ruleId":"73","severity":1,"message":"82","line":12,"column":6,"nodeType":"75","endLine":12,"endColumn":8,"suggestions":"83"},{"ruleId":"78","severity":1,"message":"79","line":86,"column":33,"nodeType":"80","messageId":"81","endLine":86,"endColumn":36},{"ruleId":"84","severity":1,"message":"85","line":45,"column":1,"nodeType":"86","endLine":45,"endColumn":34},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","'createStore' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onGetSales'. Either include it or remove the dependency array. If 'onGetSales' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["89"],"'onGetSalesList' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'onGetMaterials'. Either include it or remove the dependency array. If 'onGetMaterials' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["90"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [onGetSales]",{"range":"95","text":"96"},"Update the dependencies array to be: [onGetMaterials]",{"range":"97","text":"98"},[1281,1283],"[onGetSales]",[345,347],"[onGetMaterials]"]