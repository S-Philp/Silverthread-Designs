[{"/Users/katydonoghue/Desktop/silver-thread-client/src/index.js":"1","/Users/katydonoghue/Desktop/silver-thread-client/src/App.js":"2","/Users/katydonoghue/Desktop/silver-thread-client/src/reportWebVitals.js":"3","/Users/katydonoghue/Desktop/silver-thread-client/src/common/redux/store.js":"4","/Users/katydonoghue/Desktop/silver-thread-client/src/login/ui/register.jsx":"5","/Users/katydonoghue/Desktop/silver-thread-client/src/login/ui/login.jsx":"6","/Users/katydonoghue/Desktop/silver-thread-client/src/login/use-cases/UserSignOut.js":"7","/Users/katydonoghue/Desktop/silver-thread-client/src/login/ui/logout.jsx":"8","/Users/katydonoghue/Desktop/silver-thread-client/src/login/frameworks/reducers.js":"9","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/SalesTable.jsx":"10","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/MaterialsTable.jsx":"11","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/ProductsTable.jsx":"12","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/Dashboard.jsx":"13","/Users/katydonoghue/Desktop/silver-thread-client/src/login/frameworks/actions.js":"14","/Users/katydonoghue/Desktop/silver-thread-client/src/login/use-cases/UserLogin.js":"15","/Users/katydonoghue/Desktop/silver-thread-client/src/login/use-cases/CheckUser.js":"16","/Users/katydonoghue/Desktop/silver-thread-client/src/login/use-cases/UserRegister.js":"17","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/reducers.js":"18","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getProducts.js":"19","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/excelProductsReports.js":"20","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteProduct.js":"21","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/actions.js":"22","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddProducts.jsx":"23","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/EditProduct.jsx":"24","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/editProduct.js":"25","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteMaterialItem.js":"26","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/editWholesale.js":"27","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/addMaterialItem.js":"28","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getMaterials.js":"29","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getProductByID.js":"30","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/addProduct.js":"31","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/excelMaterialsReports.js":"32","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/addMaterial.js":"33","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteMaterial.js":"34","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteSale.js":"35","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/exelSalesReports.js":"36","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getSales.js":"37","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/EditMaterials.jsx":"38","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddMaterials.jsx":"39","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/EditSales.jsx":"40","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddSales.jsx":"41","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/addSale.js":"42","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/editSale.js":"43","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/editMaterial.js":"44"},{"size":2287,"mtime":1609784583903,"results":"45","hashOfConfig":"46"},{"size":3157,"mtime":1609784583899,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":1608221967989,"results":"48","hashOfConfig":"46"},{"size":498,"mtime":1609341096136,"results":"49","hashOfConfig":"46"},{"size":2480,"mtime":1609784583903,"results":"50","hashOfConfig":"46"},{"size":2359,"mtime":1609784583903,"results":"51","hashOfConfig":"46"},{"size":437,"mtime":1609784583904,"results":"52","hashOfConfig":"46"},{"size":152,"mtime":1608741251265,"results":"53","hashOfConfig":"46"},{"size":693,"mtime":1609784583903,"results":"54","hashOfConfig":"46"},{"size":10161,"mtime":1609887406685,"results":"55","hashOfConfig":"46"},{"size":5070,"mtime":1609784583902,"results":"56","hashOfConfig":"46"},{"size":6182,"mtime":1609784609408,"results":"57","hashOfConfig":"46"},{"size":7650,"mtime":1608831511928,"results":"58","hashOfConfig":"46"},{"size":265,"mtime":1609784583903,"results":"59","hashOfConfig":"46"},{"size":1044,"mtime":1609784583904,"results":"60","hashOfConfig":"46"},{"size":815,"mtime":1609784583904,"results":"61","hashOfConfig":"46"},{"size":740,"mtime":1609784583904,"results":"62","hashOfConfig":"46"},{"size":5741,"mtime":1609959577415,"results":"63","hashOfConfig":"46"},{"size":734,"mtime":1608753980674,"results":"64","hashOfConfig":"46"},{"size":1103,"mtime":1609517562309,"results":"65","hashOfConfig":"46"},{"size":803,"mtime":1608753980674,"results":"66","hashOfConfig":"46"},{"size":1131,"mtime":1609784583900,"results":"67","hashOfConfig":"46"},{"size":18578,"mtime":1609955372486,"results":"68","hashOfConfig":"46"},{"size":15599,"mtime":1609949278311,"results":"69","hashOfConfig":"46"},{"size":792,"mtime":1609709734989,"results":"70","hashOfConfig":"46"},{"size":496,"mtime":1609709734989,"results":"71","hashOfConfig":"46"},{"size":798,"mtime":1609709734989,"results":"72","hashOfConfig":"46"},{"size":524,"mtime":1609709734988,"results":"73","hashOfConfig":"46"},{"size":743,"mtime":1608586627868,"results":"74","hashOfConfig":"46"},{"size":718,"mtime":1609709734990,"results":"75","hashOfConfig":"46"},{"size":767,"mtime":1609784583903,"results":"76","hashOfConfig":"46"},{"size":983,"mtime":1609517562309,"results":"77","hashOfConfig":"46"},{"size":815,"mtime":1609423483470,"results":"78","hashOfConfig":"46"},{"size":798,"mtime":1609423483471,"results":"79","hashOfConfig":"46"},{"size":791,"mtime":1609959572477,"results":"80","hashOfConfig":"46"},{"size":1203,"mtime":1609959979197,"results":"81","hashOfConfig":"46"},{"size":763,"mtime":1609260202769,"results":"82","hashOfConfig":"46"},{"size":3754,"mtime":1609949278310,"results":"83","hashOfConfig":"46"},{"size":4409,"mtime":1609949278309,"results":"84","hashOfConfig":"46"},{"size":7670,"mtime":1609949278311,"results":"85","hashOfConfig":"46"},{"size":7048,"mtime":1609882532194,"results":"86","hashOfConfig":"46"},{"size":1526,"mtime":1609803206315,"results":"87","hashOfConfig":"46"},{"size":791,"mtime":1609882532195,"results":"88","hashOfConfig":"46"},{"size":781,"mtime":1608748950480,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1cflu80",{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"92"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"/Users/katydonoghue/Desktop/silver-thread-client/src/index.js",[],["191","192"],"/Users/katydonoghue/Desktop/silver-thread-client/src/App.js",["193","194"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\"\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n// import './App.css';\n\n\n// Pages\nimport MaterialsTable from './data-tables/ui/MaterialsTable'\nimport SalesTable from './data-tables/ui/SalesTable'\nimport ProductsTable from './data-tables/ui/ProductsTable'\nimport Dashboard from './data-tables/ui/Dashboard'\nimport Login from './login/ui/login';\nimport Logout from './login/ui/logout';\n\nimport {UserSignout} from './login/use-cases/UserSignOut'\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={(event) => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst NavTabs = ({onUserSignOut})=> {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"nav tabs example\"\n        >\n          <LinkTab label=\"Dashboard\" href=\"/dashboard\" {...a11yProps(0)} />\n          <LinkTab label=\"Materials\" href=\"/materials\" {...a11yProps(1)} />\n          <LinkTab label=\"Products\" href=\"/products\" {...a11yProps(2)} />\n          <LinkTab label=\"Sales\" href=\"/sales\" {...a11yProps(3)} />\n          <LinkTab label=\"Logout\" href=\"/login\" onClick = {()=>{onUserSignOut()}} {...a11yProps(4)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Dashboard />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <MaterialsTable />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <ProductsTable />\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <SalesTable />\n      </TabPanel>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  login: state.login.currentUser\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onUserSignOut: UserSignout(dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavTabs)\n","/Users/katydonoghue/Desktop/silver-thread-client/src/reportWebVitals.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/common/redux/store.js",["195","196"],"import { combineReducers, createStore } from \"redux\"\nimport { configureStore } from '@reduxjs/toolkit'\nimport materials from \"../../data-tables/framework/reducers\"\nimport sales from \"../../data-tables/framework/reducers\"\nimport products from \"../../data-tables/framework/reducers\"\nimport login from \"../../login/frameworks/reducers\"\n\nconst reducers = {\n    ...materials,\n    ...sales,\n    ...products,\n    ...login,\n\n}\n\nconst store = configureStore({\n    reducer: reducers,\n})\n\nexport default store","/Users/katydonoghue/Desktop/silver-thread-client/src/login/ui/register.jsx",["197","198","199"],"import React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\"\nimport { NavLink } from \"react-router-dom\"\n\n\n\nimport \"./login.css\"\nimport { onLogin } from '../frameworks/actions';\nimport { UserLogin } from '../use-cases/UserLogin'\nimport { UserRegister } from '../use-cases/UserRegister'\n\nconst Register = ({onRegister}) => {\n\n    const [fields, setFields] = useState({})\n\n    const setField = (evt) => {\n        setFields({\n            ...fields,\n            [evt.target.name]: evt.target.value\n        })\n    }\n    console.log(fields)\n    return (\n        <div className=\"login-component\">\n            <div className=\"left-container\">\n                <h2 className=\"blurb\">A Data Managment User Interface for Silver Thread Designs</h2>\n                <h2 className=\"blurb\">Handle your business logic via linked tables and graphical interfaces</h2>\n            </div>\n\n            <div className=\"login-container\">\n                <h2 className = \"login-blurb\">Register Here</h2>\n                <div className=\"login-box\">\n                    <div className=\"login-input\"><TextField id=\"outlined-basic\" label=\"First Name\" variant=\"outlined\" name = \"firstname\" onChange = {setField}/></div>\n                    <div className=\"login-input\"><TextField id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" name = \"lastname\" onChange = {setField}/></div>\n                    <div className=\"login-input\"><TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" name = \"username\" onChange = {setField}/></div>\n                    <div className=\"login-input\"><TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" name = \"password\" type = \"password\" onChange = {setField}/></div>\n                    <div className = \"button-container\">\n                        <NavLink to= \"/login\">\n                            <Button className =\"login-button\" variant=\"outlined\" onClick = {() => {onRegister(fields)}}>Login</Button>\n                        </NavLink>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, {materials}) => ({\n    user: state.login.currentUser,\n  })\n  \n  const mapDispatchToProps = (dispatch) => ({\n    onRegister: UserRegister(dispatch)\n  })\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\n\n","/Users/katydonoghue/Desktop/silver-thread-client/src/login/ui/login.jsx",["200","201"],"import React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\"\nimport { NavLink, Redirect } from \"react-router-dom\"\n\n\n\nimport \"./login.css\"\nimport { onLogin } from '../frameworks/actions';\nimport { UserLogin } from '../use-cases/UserLogin'\nimport { CheckUser } from '../use-cases/CheckUser'\n\nconst Login = ({onLogin, getLoggedUser, user}) => {\n\n    const [fields, setFields] = useState({})\n\n    const setField = (evt) => {\n        setFields({\n            ...fields,\n            [evt.target.name]: evt.target.value\n        })\n    }\n\n    useEffect(() => {\n        getLoggedUser()\n    },[])\n    console.log(fields)\n    return (\n        <div className=\"login-component\">\n            <div className=\"left-container\">\n                <h2 className=\"blurb\">A Data Managment User Interface for Silver Thread Designs</h2>\n                <h2 className=\"blurb\">Handle your business logic via linked tables and graphical interfaces</h2>\n            </div>\n\n            <div className=\"login-container\">\n                <h2 className = \"login-blurb\">See Your Business Data Now</h2>\n                <div className=\"login-box\">\n                    <div className=\"login-input\"><TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" name = \"username\" onChange = {setField}/></div>\n                    <div className=\"login-input\"><TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" type = \"password\" name = \"password\" onChange = {setField}/></div>\n                    <div>Not a user? <NavLink to=\"/register\"> Register</NavLink> and get permission from a moderator!</div>\n                    <div className = \"button-container\">\n                       <Button onClick = {()=>onLogin(fields)}className =\"login-button\"variant=\"outlined\">Login</Button>\n                       {Object.keys(user).length>0 ? <Redirect to=\"/\"/> : <div></div>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, {materials}) => ({\n    user: state.login.currentUser,\n  })\n  \n  const mapDispatchToProps = (dispatch) => ({\n    onLogin: UserLogin(dispatch),\n    getLoggedUser: CheckUser(dispatch)\n\n  })\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n\n","/Users/katydonoghue/Desktop/silver-thread-client/src/login/use-cases/UserSignOut.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/login/ui/logout.jsx",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/login/frameworks/reducers.js",["202"],"import { createReducer } from \"@reduxjs/toolkit\"\n\nimport {\n    onLogin,\n    getLoggedUser,\n    onUserSignout\n} from \"./actions\"\n\nexport const login = createReducer (\n    {\n        currentUser: {}\n    },\n    {\n        [onLogin.type]: (state, {payload: user}) => {\n            if (user === null) {\n                return state\n            }\n            state.currentUser = user\n        },\n\n        [getLoggedUser.type]: (state, {payload: user}) => {\n            if (user === null) {\n                return state\n            }\n            state.currentUser = user\n        },\n\n        [onUserSignout.type]: (state) => {\n            state.currentUser = {}\n        },\n    }\n)\n\nexport default {login}","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/SalesTable.jsx",["203","204","205","206"],"import MaterialTable from \"material-table\"\nimport { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { setAutoFreeze } from \"immer\"\n\nimport \"date-fns\"\nimport DateFnsUtils from \"@date-io/date-fns\"\nimport Popover from \"@material-ui/core/Popover\"\nimport {\n   MuiPickersUtilsProvider,\n   KeyboardDatePicker,\n} from \"@material-ui/pickers\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\nimport \"./SalesTable.css\"\nimport AddSales from \"./AddSales\"\nimport EditSales from \"./EditSales\"\nimport { GetSales } from \"../use-cases/getSales\"\nimport { DeleteSale } from \"../use-cases/deleteSale\"\nimport { exportCsv } from \"../use-cases/exelSalesReports\"\nimport AddMaterial from \"../use-cases/addMaterial\"\n\nconst useStyles = makeStyles((theme) => ({\n   root: {\n      \"& > *\": {\n         margin: theme.spacing(1),\n      },\n   },\n}))\n\nconst SalesTable = ({\n   onGetSales,\n   sales,\n   onDeleteSale,\n   salesAdd,\n   salesEdit,\n   salesDelete,\n}) => {\n   const classes = useStyles()\n\n   //set date for date-pickers on load\n   const getStartDate = () => {\n      let d = new Date()\n      d.setDate(d.getDate() - 30)\n      return d\n   }\n   let end_date = new Date()\n   let start_date = getStartDate()\n\n   const [selectedDate, setSelectedDate] = useState({\n      start: start_date,\n      end: end_date,\n   })\n   const [open, setOpen] = useState(false)\n   const [openEdit, setOpenEdit] = useState(false)\n   const [openAdd, setOpenAdd] = useState(false)\n   const [rowData, setRowData] = useState()\n\n   var tableData\n\n   //get sales from db\n   useEffect(() => {\n      onGetSales(selectedDate)\n   }, [salesAdd, salesEdit, salesDelete])\n\n   tableData = sales.map((data) => ({\n      ...data,\n   }))\n\n   //changes the start date of the reports\n   const handleStartDateChange = (date) => {\n      setSelectedDate({\n         ...selectedDate,\n         start: date,\n      })\n   }\n\n   //changes the end date of the reports\n   const handleEndDateChange = (date) => {\n      setSelectedDate({\n         ...selectedDate,\n         end: date,\n      })\n   }\n\n   //onclick function that runs new sales report based on input dates\n   const handleRunSalesReport = (dates) => {\n      if (dates.start === null || dates.end === null) {\n         alert(\"Please enter a start and end date for your report\")\n      } else if (dates.start > dates.end) {\n         alert(\"The start date must be before the end date\")\n      } else {\n         onGetSales(dates)\n      }\n   }\n\n   const EditSalesModal = ({ closeEditModal }) => {\n      return (\n         <div className=\"editSalesModal\">\n            <div className=\"closeIconButton\">\n               <IconButton variant=\"contained\" onClick={() => closeEditModal()}>\n                  <HighlightOffIcon />\n               </IconButton>\n            </div>\n            <EditSales saleData={rowData} closeEditModal={closeEditModal} />\n         </div>\n      )\n   }\n\n   const AddSalesModal = ({ closeAddModal }) => {\n      return (\n         <div className=\"editSalesModal\">\n            <div className=\"closeIconButton\">\n               <IconButton variant=\"contained\" onClick={() => closeAddModal()}>\n                  <HighlightOffIcon />\n               </IconButton>\n            </div>\n            <AddSales saleData={rowData} closeAddModal={closeAddModal} />\n         </div>\n      )\n   }\n\n   const closeEditModal = () => {\n      setOpenEdit(false)\n   }\n\n   const closeAddModal = () => {\n      setOpenAdd(false)\n   }\n\n   //sets column headers\n   const columns = [\n      { title: \"id\", field: \"id\", hidden: true },\n      { title: \"Product ID\", field: \"product_id\", hidden: true },\n      { title: \"sold_PTM\", field: \"sold_PTM\", align: \"left\", hidden: true  },\n      { title: \"Date\", field: \"date_sold\", defaultSort: \"desc\", align: \"left\" },\n      { title: \"Product Number\", field: \"product_number\", align: \"left\", hidden: true, },\n      { title: \"Product Name\", field: \"product_name\", align: \"left\" },\n      { title: \"Quantity\", field: \"quantity\", align: \"left\" },\n      { title: \"Price per Unit\", field: \"price_per_unit\", align: \"left\", type: \"currency\", currencySetting: {currencyCode: \"USD\", minimumFractionDigits: 2, maximumFractionDigits: 2,}, },\n      { title: \"Discount\", field: \"discount\", align: \"left\" },\n      { title: \"Total Sales Price\", field: \"total_price\", align: \"left\", type: \"currency\", currencySetting: { currencyCode: \"USD\", minimumFractionDigits: 2, maximumFractionDigits: 2,}, },\n      { title: \"Tax\", field: \"tax\", align: \"left\", type: \"currency\", currencySetting: { currencyCode: \"USD\", minimumFractionDigits: 2, maximumFractionDigits: 2, }, },\n      { title: \"Shipping\", field: \"shipping\", align: \"left\", type: \"currency\", currencySetting: { currencyCode: \"USD\", minimumFractionDigits: 2, maximumFractionDigits: 2, }, },\n      { title: \"Category\", field: \"product_category\", align: \"left\", hidden: true, },\n      { title: \"Purchased By\", field: \"sold_to\", align: \"left\" },\n   ]\n\n   return (\n      <div className=\"salesContainer\">\n         <h1>Silverthread Sales </h1>\n         <div className=\"datePickerContainer\">\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n               {/* <Grid container justify=\"space-around\" style={{backgroundColor:'#FFFFFF'}}> */}\n               <Grid\n                  container\n                  justify=\"space-evenly\"\n                  alignItems=\"center\"\n                  style={{ backgroundColor: \"#FFFFFF\" }}\n               >\n                  <KeyboardDatePicker\n                     style={{ backgroundColor: \"#FFFFFF\" }}\n                     margin=\"normal\"\n                     name=\"start\"\n                     id=\"date-picker-dialog\"\n                     label=\"Start Date\"\n                     format=\"MM/dd/yyyy\"\n                     value={selectedDate.start}\n                     onChange={handleStartDateChange}\n                     KeyboardButtonProps={{\n                        \"aria-label\": \"change date\",\n                     }}\n                  />\n\n                  <KeyboardDatePicker\n                     margin=\"normal\"\n                     name=\"end\"\n                     id=\"date-picker-dialog\"\n                     label=\"End Date\"\n                     format=\"MM/dd/yyyy\"\n                     value={selectedDate.end}\n                     onChange={handleEndDateChange}\n                     KeyboardButtonProps={{\n                        \"aria-label\": \"change date\",\n                     }}\n                  />\n\n                  <div\n                     className={classes.root}\n                     style={{ backgroundColor: \"#FFFFFF\" }}\n                  >\n                     <Button\n                        onClick={() => handleRunSalesReport(selectedDate)}\n                        variant=\"contained\"\n                        color=\"secondary\"\n                     >\n                        Run Report\n                     </Button>\n                  </div>\n               </Grid>\n            </MuiPickersUtilsProvider>\n         </div>\n\n         <Popover\n            open={openAdd}\n            anchorOrigin={{\n               vertical: \"center\",\n               horizontal: \"center\",\n            }}\n            transformOrigin={{\n               vertical: \"top\",\n               horizontal: \"center\",\n            }}\n         >\n            <AddSalesModal className=\"modal\" closeAddModal={closeAddModal} />\n         </Popover>\n\n         <Popover\n            open={openEdit}\n            anchorOrigin={{\n               vertical: \"center\",\n               horizontal: \"center\",\n            }}\n            transformOrigin={{\n               vertical: \"top\",\n               horizontal: \"center\",\n            }}\n         >\n            <EditSalesModal className=\"modal\" closeEditModal={closeEditModal} />\n         </Popover>\n\n         {sales === [] ? (\n            <div>Loading Data....</div>\n         ) : (\n            <div className=\"salesMaterialTable\">\n               <MaterialTable\n                  style={{ backgroundColor: \"#FFFFFF\" }}\n                  title=\"Silverthread Sales\"\n                  columns={columns}\n                  data={tableData}\n                  options={{\n                     search: false,\n                     showTitle: false,\n                     filtering: true,\n                     exportButton: true,\n                     exportCsv,\n                     headerStyle: {\n                        backgroundColor: \"#b71c1c\",\n                        color: \"#FFFFFF\",\n                     },\n                  }}\n                  actions={[\n                     {\n                        icon: \"add\",\n                        tooltip: \"Add Sale\",\n                        isFreeAction: true,\n                        onClick: (event) => setOpenAdd(true),\n                     },\n                     {\n                        icon: \"edit\",\n                        tooltip: \"Edit Row\",\n                        onClick: (event, rowData) => {\n                           setRowData(rowData)\n                           setOpenEdit(true)\n                        },\n                     },\n                  ]}\n                  editable={{\n                     onRowDelete: (oldData) =>\n                        new Promise((resolve, reject) => {\n                           setTimeout(() => {\n                              // const id = oldData.id\n                              onDeleteSale(oldData)\n                              resolve()\n                           }, 1000)\n                        }),\n                  }}\n               />\n            </div>\n         )}\n      </div>\n   )\n}\n\nconst mapStateToProps = (state, {sales}) => ({\n   sales: state.sales.salesList,\n   salesAdd: state.sales.newSaleId,\n   salesEdit: state.sales.saleEdits,\n   salesDelete: state.sales.saleID,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n   onGetSales: GetSales(dispatch),\n   onDeleteSale: DeleteSale(dispatch),\n   onAddMaterial: AddMaterial(dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SalesTable)\n","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/MaterialsTable.jsx",["207"],"import MaterialTable from 'material-table';\nimport { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\"\nimport './MaterialsTable.css'\nimport \"./AddMaterialModal.css\"\nimport AddMaterials from './AddMaterials'\nimport EditMaterials from './EditMaterials'\nimport { GetMaterials } from \"../use-cases/getMaterials\"\nimport { DeleteMaterial } from \"../use-cases/deleteMaterial\"\nimport {AddMaterial} from \"../use-cases/addMaterial\";\nimport Popover from '@material-ui/core/Popover';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport {exportCsv } from '../use-cases/excelMaterialsReports'\n\nconst AddMaterialModal = ({closeModal }) => {\n\n    return(\n        <div className = \"add-material-container\">\n           <div className='closeIconButton'>\n                <IconButton variant=\"contained\" onClick={() => closeModal()} ><HighlightOffIcon /></IconButton>\n            </div>\n            <AddMaterials closeModal = {closeModal}/>      \n        </div>\n     \n    )\n}\n\nconst EditMaterialModal = ({closeEditModal, rowData }) => {\n     \n  return(\n      <div className = \"edit-material-container\">\n         <div className='closeIconButton'>\n              <IconButton variant=\"contained\" onClick={() => closeEditModal()} ><HighlightOffIcon /></IconButton>\n          </div>\n          <EditMaterials materialData={rowData} closeEditModal = {closeEditModal}/>      \n      </div>\n   \n  )\n}\n\n\nconst MaterialsTable = ({ onGetMaterials, materials, onDeleteMaterial, materialsEdit, materialsDelete, materialsAdd}) => {\n  const [open, setOpen] = useState(false)\n  const [openEdit, setOpenEdit] = useState(false)\n  const [rowData, setRowData] = useState()\n  \n  const closeModal = () => {\n    setOpen(false)\n  }\n\n  const closeEditModal = () => {\n    setOpenEdit(false)\n  }\n\n  useEffect(() => {  \n    onGetMaterials()\n  }, [materialsEdit, materialsDelete, materialsAdd])\n\n  let tableData = materials.map(data => ({\n    ...data\n  }))\n\n  const columns = [\n    { title: 'id', field: 'id', hidden: true },\n    { title: 'Material', field: 'material_name', align: 'left' }, \n    { title: 'Unit of Measure', field: 'unit', align: 'left'  }, \n    { title: 'Price per Unit', field: 'unit_price', align: 'left', type:'currency', currencySetting:{ currencyCode:'USD', minimumFractionDigits:2, maximumFractionDigits:2} },\n    { title: 'Vendor', field: 'vendor', align: 'left'  },\n    { title: 'Product Number', field: 'vendor_material_id', align: 'left' },\n    { title: 'Category', field: 'category', align: 'left' },\n  ]\n\n  return (\n    <div className='materialsContainer'>\n      <h1>Silverthread Materials </h1>\n      <Popover\n        open={open}\n        anchorOrigin={{\n          vertical: 'center',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <AddMaterialModal className = \"modal\" closeModal = {closeModal}/>\n      </Popover>\n\n      <Popover\n            open={openEdit}\n            anchorOrigin={{\n                vertical: 'center',\n                horizontal: 'center',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n            }}\n        >\n          <EditMaterialModal rowData={rowData} closeEditModal = {closeEditModal} />\n          </Popover>\n        \n      <MaterialTable\n        style={{backgroundColor:'#FFFFFF'}}\n        title=\"Silverthread Materials\"\n        columns={columns}\n        data={tableData}\n        options={{\n          search: false,\n          showTitle: false,\n          filtering: true,\n          exportButton: true,        \n          exportCsv,\n          headerStyle: {\n            backgroundColor: '#01579b',          \n            color: '#FFFFFF'\n          }\n        }}\n\n        actions={[\n          {\n            icon: 'add',\n            tooltip: 'Add Material',\n            isFreeAction: true,\n            onClick: (event) => setOpen(true)\n          },\n          {\n            icon: 'edit',\n            tooltip: 'Edit Row',\n            onClick: (event, rowData) => {           \n              setRowData(rowData)\n              setOpenEdit(true)\n            }\n          }\n        ]}\n\n        editable={{\n          onRowDelete: oldData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const id = oldData.id;              \n                onDeleteMaterial(id)\n                resolve()\n              }, 1500)\n            }),\n        }}\n\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state, {materials}) => ({\n  materials: state.materials.materialsList,\n  materialsDelete: state.materials.materialID,\n  materialsAdd: state.materials.materialAdd,\n  materialsEdit: state.materials.materialEdit\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  onGetMaterials: GetMaterials(dispatch),\n  onAddMaterial: AddMaterial(dispatch),\n  onDeleteMaterial: DeleteMaterial(dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MaterialsTable)","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/ProductsTable.jsx",["208","209"],"import MaterialTable from 'material-table';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport './ProductsTable.css'\n\nimport Popover from '@material-ui/core/Popover';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport EditProduct from './EditProduct'\nimport AddProducts from './AddProducts'\nimport { GetProducts } from '../use-cases/getProducts'\nimport { DeleteProduct } from '../use-cases/deleteProduct'\nimport { exportCsv} from '../use-cases/excelProductsReports'\n\n\nconst AddProductModal = ({ closeModal }) => {\n    return (\n        <div className=\"addProductModal\">\n            <div className='closeIconButton'>\n                <IconButton variant=\"contained\" onClick={() => closeModal()}><HighlightOffIcon /></IconButton>\n            </div>\n            <AddProducts />\n        </div>\n    )\n}\n\nconst EditProductModal = ({ closeEditModal, rowData }) => {\n    return (\n        <div className=\"addProductModal\">\n            <div className='closeIconButton'>\n                <IconButton variant=\"contained\" onClick={() => closeEditModal()}><HighlightOffIcon /></IconButton>\n            </div>\n            <EditProduct productData={rowData} closeEditModal={closeEditModal}/>\n        </div>\n    )\n}\n\n\nconst ProductsTable = ({ onGetProducts, products, onDeleteProduct, productDelete, productAdd, productEdit }) => {\n\n    const [open, setOpen] = useState(false)\n    const [openEdit, setOpenEdit] = useState(false)\n    const [rowData, setRowData] = useState('')\n\n    var tableData\n\n    //get products from db\n    useEffect(() => {\n        onGetProducts()\n    }, [productDelete, productAdd, productEdit])\n\n    tableData = products.map(data => ({\n        ...data\n    }))\n\n\n    //sets column headers\n    const columns = [\n        { title: 'id', field: 'id', hidden: true },\n        { title: 'labor', field: 'labor', hidden: true, align: 'left' },\n        { title: 'Product Number', field: 'product_num', align: 'left' },\n        { title: 'Product Name', field: 'product_name', align: 'left' },\n        { title: 'Wholesale Price', field: 'wholesale', align: 'left', type:'currency', currencySetting:{ currencyCode:'USD', minimumFractionDigits:2, maximumFractionDigits:2} },\n        { title: 'Retail Price', field: 'retail_price', align: 'left', type:'currency', currencySetting:{ currencyCode:'USD', minimumFractionDigits:2, maximumFractionDigits:2} },\n        { title: 'Category', field: 'category', align: 'left' },\n        { title: 'Inventory - Onsite', field: 'quantity', align: 'left' },\n        { title: 'Inventory - PTM', field: 'quantity_painted_tree', align: 'left' },\n    ]\n\n    const closeModal = () => {\n        setOpen(false)\n    }\n\n    const closeEditModal = () => {\n        setOpenEdit(false)\n    }\n\n    return (\n        <div className='productsContainer'>\n            <h1>Silverthread Products </h1>\n            <Popover\n                open={open}\n                anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <AddProductModal className=\"modal\" closeModal={closeModal} />\n            </Popover>\n\n            <Popover\n                open={openEdit}\n                anchorOrigin={{\n                    vertical: 'center',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <EditProductModal className=\"modal\" closeEditModal={closeEditModal} rowData={rowData} />\n            </Popover>\n\n            <div className='productsMaterialTable'>\n                <MaterialTable\n                    style={{ backgroundColor: '#FFFFFF' }}\n                    title=\"Silverthread Products\"\n                    columns={columns}\n                    data={tableData}\n\n                    options={{\n                        search: false,\n                        showTitle: false,\n                        filtering: true,\n                        exportButton: true,                        \n                        exportCsv,\n                        headerStyle: {\n                            backgroundColor: '#f06292',\n                            color: '#FFFFFF'\n                        },\n                    }}\n                    actions={[\n                        {\n                            icon: 'add',\n                            tooltip: 'Add Product',\n                            isFreeAction: true,\n                            onClick: (event) => setOpen(true)\n                        },\n                        {\n                            icon: 'edit',\n                            tooltip: 'Edit Row',\n                            onClick: (event, rowData) => {                        \n                                setRowData(rowData)\n                                setOpenEdit(true)                                \n                            }\n                        }\n                    ]}\n                    editable={{\n                        onRowDelete: oldData =>\n                            new Promise((resolve, reject) => {\n                                setTimeout(() => {\n                                    const id = oldData.id;\n                                    onDeleteProduct(id)\n                                    resolve()\n                                }, 1000)\n                            }),\n                    }}\n                />\n            </div>\n        </div >\n    )\n}\n\nconst mapStateToProps = (state, { }) => ({\n    products: state.products.productsList,\n    productDelete: state.products.productsDelete,\n    productAdd: state.products.newProduct,\n    productEdit: state.products.editedProduct\n\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    onGetProducts: GetProducts(dispatch),\n    onDeleteProduct: DeleteProduct(dispatch)\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsTable)","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/Dashboard.jsx",["210","211","212","213","214"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { VictoryPie, VictoryChart, VictoryLegend, VictoryLabel } from 'victory';\n\nconst data = [\n    { x: 1, y: 2 },\n    { x: 2, y: 2 },\n    { x: 3, y: 3 }\n  ];\n  const legendData = [{ name: \"Necklaces\" }, { name: \"Bracelets\" }, { name: \"Rings\" }];\n\n\nconst Dashboard = () => {\n    return (\n      <div>\n        <h1>Silverthread Products Sold</h1>\n        <svg color={\"white\"} width={500} height={400} style={{ border: \"1px solid #ccc\", backgroundColor: \"white\" }}>\n        {/* <h1>Silverthread Prodcuts Sold</h1> */}\n        {/* <div> */}\n        {/* <p>Silverthread Prodcuts Sold</p> */}\n          <VictoryLegend\n            standalone={false}\n            colorScale={[\"#78bfb5\", \"#f06292\", \"#b71c1c\"]}\n            x={20}\n            y={40}\n            gutter={20}\n            title=\"Legend\"\n            centerTitle\n            style={{ border: { stroke: \"black\" } }}\n            data={legendData}\n          />\n          <VictoryPie\n        //   titleComponent={\"Silverthread Prodcuts Sold\"}\n            // title=\"Silverthread Prodcuts Sold\"\n            // name=\"Silverthread Prodcuts Sold\"\n            standalone={false}\n            width={400}\n            height={300}\n            padding={{\n              left: 200,\n              bottom: 20,\n              top: 100\n            }}\n            colorScale={[\"#78bfb5\", \"#f06292\", \"#b71c1c\"]}\n            data={data}\n            labels={() => null}\n          />\n          {/* </div> */}\n        </svg>\n        </div>\n      );\n//     return (\n//         <div>\n// <VictoryChart>\n// <VictoryPie\n//   data={[\n//     { x: \"Necklaces\", y: 35, yourAttribute: \"#78bfb5\" },\n//     { x: \"Bracelets\", y: 40, yourAttribute: \"#f06292\" },\n//     { x: \"Earrings\", y: 55, yourAttribute: \"#b71c1c\" }\n//   ]}\n//   style={{\n//     data: {\n//       fill: (d) => d.slice.data.yourAttribute\n//     }\n//   }}\n// />\n// </VictoryChart>\n            {/* <VictoryPie\n  colorScale={[\"#78bfb5\", \"#f06292\", \"#01579b\", \"#b71c1c\", \"navy\" ]}\n  data={[\n    { x: \"Earrings\", y: 20 },\n    { x: \"Necklaces\", y: 22 },\n    { x: \"Bracelets\", y: 15 },\n    { x: \"Rings\", y: 10 },\n    { x: \"Other\", y: 20 },\n    { x: \"Mezuzzahs\", y: 2 },\n    { x: \"Brooches\", y: 1 },\n    { x: \"Chains\", y: 10 }\n  ]}\n/> */}\n    //     </div>\n    // )\n}\n\nexport default Dashboard\n\n\n// import * as React from 'react';\n// import Paper from '@material-ui/core/Paper';\n// import {\n//   Chart,\n//   PieSeries,\n// } from '@devexpress/dx-react-chart-material-ui';\n// import { withStyles } from '@material-ui/core/styles';\n// import Typography from '@material-ui/core/Typography';\n// import NativeSelect from '@material-ui/core/NativeSelect';\n// import FormControl from '@material-ui/core/FormControl';\n// import {\n//   schemeCategory10,\n//   schemeAccent,\n//   schemeDark2,\n//   schemePaired,\n//   schemePastel1,\n//   schemePastel2,\n//   schemeSet1,\n//   schemeSet2,\n//   schemeSet3,\n// } from 'd3-scale-chromatic';\n\n// import { Palette } from '@devexpress/dx-react-chart';\n\n// const schemeCollection = [\n//   schemeCategory10,\n//   schemeAccent,\n//   schemeDark2,\n//   schemePaired,\n//   schemePastel1,\n//   schemePastel2,\n//   schemeSet1,\n//   schemeSet2,\n//   schemeSet3,\n// ];\n\n// const demoStyles = theme => ({\n//   typography: {\n//     marginTop: 0,\n//     marginBottom: theme.spacing(1),\n//   },\n//   div: {\n//     width: '200px',\n//     marginLeft: '50px',\n//     paddingBottom: '30px',\n//   },\n//   item: {\n//     width: '40px',\n//     height: '40px',\n//   },\n//   schemeConteiner: {\n//     display: 'flex',\n//     justifyContent: 'center',\n//     marginTop: theme.spacing(1),\n//   },\n// });\n\n// const data = [];\n// for (let i = 0; i < 15; i += 1) {\n//   data.push({ category: `item${i}`, val: 1 });\n// }\n\n// class Demo extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       data,\n//       scheme: schemeCollection[0],\n//     };\n\n//     this.changeScheme = this.changeScheme.bind(this);\n//   }\n\n//   changeScheme(e) {\n//     this.setState({ scheme: schemeCollection[e.target.value] });\n//   }\n\n//   render() {\n//     const { data: chartData, scheme } = this.state;\n//     const { classes } = this.props;\n\n//     return (\n//       <Paper>\n//         <Chart\n//           data={chartData}\n//         >\n//           <Palette scheme={scheme} />\n//           <PieSeries\n//             valueField=\"val\"\n//             argumentField=\"category\"\n//           />\n//         </Chart>\n//         <div className={classes.schemeConteiner}>\n//           {scheme.map(color => (\n//             <div\n//               key={color}\n//               className={classes.item}\n//               style={{ backgroundColor: color }}\n//             />\n//           ))}\n//         </div>\n//         <div className={classes.div}>\n//           <Typography component=\"h5\" variant=\"h5\" className={classes.typography}>Scheme</Typography>\n//           <FormControl>\n//             <NativeSelect onChange={this.changeScheme} defaultValue={0}>\n//               <option value={0}>schemeCategory10</option>\n//               <option value={1}>schemeAccent</option>\n//               <option value={2}>schemeDark2</option>\n//               <option value={3}>schemePaired</option>\n//               <option value={4}>schemePastel1</option>\n//               <option value={5}>schemePastel2</option>\n//               <option value={6}>schemeSet1</option>\n//               <option value={7}>schemeSet2</option>\n//               <option value={8}>schemeSet3</option>\n//             </NativeSelect>\n//           </FormControl>\n//         </div>\n//       </Paper>\n//     );\n//   }\n// }\n\n// export default withStyles(demoStyles, { name: 'Demo' })(Demo);\n\n\n// import * as React from 'react';\n// import Paper from '@material-ui/core/Paper';\n// import {\n//   Chart,\n//   PieSeries,\n// } from '@devexpress/dx-react-chart-material-ui';\n// import { Palette } from '@devexpress/dx-react-chart';\n// import { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\n\n\n// const theme = createMuiTheme({\n//     palette: {\n//       background: {\n//         paper: \"#FFFFFF\"\n//         // paper: \"#bdbdbd\"\n//         // paper: \"#616161\" // gray\n//       },\n//        primary: {\n//         //  main: \"#4db6ac\" //turquoise\n//          main: \"#78bfb5\", //other turquoise\n//          contrastText: \"#FFFFFF\"\n//         //  main: \"#f06292\" //pink\n//                  },\n//        secondary: {\n//          main: \"#f06292\" //pink\n//           // main: \"#01579b\" //blue\n//           // main: \"#b71c1c\" //red\n//           // main: \"#f50057\" //dark pink\n//                   },\n//              },\n//   // fontFamily: font // as an aside, highly recommend importing roboto font for Material UI projects! Looks really nice\n//   });\n\n// const data = [\n//   { country: 'Necklaces', area: 12 },\n//   { country: 'Rings', area: 7 },\n//   { country: 'Earrings', area: 7 },\n//   { country: 'Bracelettes', area: 7 },\n//   { country: 'Brazil', area: 6 },\n//   { country: 'Australia', area: 5 },\n//   { country: 'India', area: 2 },\n//   { country: 'Others', area: 55 },\n// ];\n// export default class Demo extends React.PureComponent {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       data,\n//     };\n//   }\n\n//   render() {\n//     const { data: chartData } = this.state;\n\n//     return (\n//         <ThemeProvider theme={theme}>\n//       <Paper>\n//         <Chart\n//           data={chartData}\n//         >\n//           <PieSeries\n//             valueField=\"area\"\n//             argumentField=\"country\"\n//           />\n//         </Chart>\n//       </Paper>\n//       </ThemeProvider>\n//     );\n//   }\n// }","/Users/katydonoghue/Desktop/silver-thread-client/src/login/frameworks/actions.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/login/use-cases/UserLogin.js",["215"],"import { onLogin } from \"../frameworks/actions\"\n\nexport const UserLogin = (dispatch) => async(\n    user\n) => {\n   // first we call a fetch request to update our backend because the backend is the source of truth for our global state\n   \n      const response = await fetch(`http://localhost:8000/login`, {\n         method: \"POST\",\n         headers: {\n            \"Content-Type\": \"application/json\",\n         },\n         body: JSON.stringify(user),\n      })\n\n      //need to await on parsing response to javascript objects from json\n      const success = await response.json()\n      const localUser = {\n          auth: success.auth, \n          token: success.token, \n          userId: success.user.id, \n          username: success.user.username, \n          firstname: success.user.first_name, \n          lastname: success.user.last_name}\n\n      localStorage.setItem(\"token\", success.token)\n      console.log(success)\n\n      //pass into our action as a payload and we dispatch it\n      return dispatch(onLogin(success))\n}\n\nexport default UserLogin","/Users/katydonoghue/Desktop/silver-thread-client/src/login/use-cases/CheckUser.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/login/use-cases/UserRegister.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/reducers.js",["216"],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getProducts.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/excelProductsReports.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteProduct.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/framework/actions.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddProducts.jsx",["217","218","219","220","221","222","223","224"],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/EditProduct.jsx",["225","226","227","228","229","230","231","232"],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/editProduct.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteMaterialItem.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/editWholesale.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/addMaterialItem.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getMaterials.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getProductByID.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/addProduct.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/excelMaterialsReports.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/addMaterial.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteMaterial.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/deleteSale.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/exelSalesReports.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/getSales.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/EditMaterials.jsx",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddMaterials.jsx",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/EditSales.jsx",["233","234","235","236","237","238","239"],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/ui/AddSales.jsx",["240","241","242"],"import TextField from \"@material-ui/core/TextField\"\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport Button from \"@material-ui/core/Button\"\nimport { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { AddSale } from \"../use-cases/addSale\"\nimport { GetProducts } from '../use-cases/getProducts'\nimport \"./AddMaterialModal.css\"\nimport DateFnsUtils from \"@date-io/date-fns\"\nimport {\n   MuiPickersUtilsProvider,\n   KeyboardDatePicker,\n} from \"@material-ui/pickers\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Checkbox from '@material-ui/core/Checkbox'\n\nconst AddSales = ({ addSale, onGetProducts, products, closeAddModal }) => {\n   // putting empty fields object into local state\n   useEffect(() => {\n      onGetProducts()\n   }, [])\n\n   const [checked, setChecked] = useState(false)\n   const [fields, setFields] = useState({ 'tax': 8.25, 'date_sold': new Date(), 'shipping': 0, 'quantity': 0, 'discount': 0, 'sold_PTM': checked, 'sold_to': '' })\n\n\n   const setField = (evt) =>\n      setFields({\n         ...fields,\n         [evt.target.name]: evt.target.value,\n      })\n\n   const handleDateChange = (date) => {\n      setFields({\n         ...fields,\n         date_sold: date\n      })\n   };\n\n   const getProductDetails = (e) => {\n      let selected_product = e.target.value\n\n      let productDetails = products.find(item => {\n         return item.product_name == selected_product\n      })\n      setFields({\n         ...fields,\n         productDetails\n      })\n   }\n\n   const handleChange = (event) => {\n      setChecked(event.target.checked);\n      if (event.target.checked === true) {\n         setFields({\n            ...fields,\n            'sold_PTM': true,\n            'sold_to': 'Painted Tree Marketplace'\n         })\n      } else if (event.target.checked === false) {\n         setFields({\n            ...fields,\n            'sold_PTM': false,\n            'sold_to': ''\n         })\n      }\n\n   };\n\n   const handleSave = (fields) => {\n      //check to make sure these fields are numbers\n      let quantity = +fields.quantity\n      let tax = +fields.tax\n      let discount = +fields.discount\n      let shipping = +fields.shipping\n\n      if(!fields.productDetails) {\n         alert(\"Please select a product\")\n      } else if (!quantity || isNaN(quantity)) {\n         alert(\"Please enter a quantity sold\")\n      } else if (isNaN(tax)) {\n         alert(\"Please enter a tax rate\")\n      } else if (!fields.sold_to || fields.sold_to == \"\") {\n         alert(\"please enter the purchasers name\")\n      } else if (!fields.date_sold) {\n         alert(\"Please enter the sales date\")                 \n      } else if (isNaN(discount)) {\n         alert(\"Please enter the discount percentage\")    \n      } else if (isNaN(shipping)) {\n         alert(\"Please enter the shipping cost\")  \n      } else {\n         addSale(fields)\n         closeAddModal()\n      }    \n   }\n\n   return (\n      <div className=\"addMaterialTBContainer\">\n         <h2>Add Sale</h2>\n\n         <div className=\"inputContainer\">\n            {/* Selector for products */}\n            <Autocomplete\n               id=\"free-solo-demo\"\n               freeSolo\n               options={products.map((option) => option.product_name)}\n               renderInput={(params) => (\n                  <TextField {...params} name='product_name' onSelect={getProductDetails} value=\"\" label=\"Product\" margin=\"normal\" variant=\"outlined\" fullWidth />\n               )} handleProductInput\n            />\n         </div>\n         <div>\n            <label> Sold At Painted Tree MarketPlace\n         <Checkbox\n                  checked={checked}\n                  onChange={handleChange}\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n               /></label>\n         </div>\n\n         <div className=\"inputContainer\">\n            <TextField\n               className=\"outlined\"\n               label=\"Quantity\"\n               name=\"quantity\"\n               onChange={setField}\n               InputLabelProps={{\n                  shrink: true,\n               }}\n               variant=\"outlined\"\n               fullWidth\n            />\n         </div>\n\n         <div className=\"inputContainer\">\n            <TextField\n               className=\"outlined\"\n               label=\"Discount\"\n               name=\"discount\"\n               onChange={setField}\n               InputLabelProps={{\n                  shrink: true,\n               }}\n               variant=\"outlined\"\n               fullWidth\n            />\n         </div>\n\n         <div className=\"inputContainer\">\n            <TextField\n               className=\"outlined\"\n               label=\"Tax\"\n               name=\"tax\"\n               value={fields.tax}\n               onChange={setField}\n               InputLabelProps={{\n                  shrink: true,\n               }}\n               variant=\"outlined\"\n               fullWidth\n            />\n         </div>\n\n         <div className=\"inputContainer\">\n            <TextField\n               className=\"outlined\"\n               label=\"Shipping\"\n               name=\"shipping\"\n               onChange={setField}\n               InputLabelProps={{\n                  shrink: true,\n               }}\n               variant=\"outlined\"\n               fullWidth\n            />\n         </div>\n\n         <div className=\"inputContainer\">\n            <TextField\n               className=\"outlined\"\n               label=\"Purchased By\"\n               name=\"sold_to\"\n               value={fields.sold_to}\n               onChange={setField}\n               InputLabelProps={{\n                  shrink: true,\n               }}\n               variant=\"outlined\"\n               fullWidth\n            />\n         </div>\n\n         <div className=\"inputContainer\">\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n               <KeyboardDatePicker\n                  margin=\"normal\"\n                  name=\"date_sold\"\n                  id=\"date-picker-dialog\"\n                  label=\"Date Sold\"\n                  format=\"MM/dd/yyyy\"\n                  value={fields.date_sold}\n                  onChange={handleDateChange}\n                  KeyboardButtonProps={{\n                     'aria-label': 'change date',\n                  }}\n                  fullWidth\n               />\n            </MuiPickersUtilsProvider>\n         </div>\n\n         <div>\n            <Button\n               onClick={() => {\n                  handleSave(fields)\n               }}\n               variant=\"contained\"\n               color=\"secondary\"\n               size=\"large\"\n               className=\"addSalesBtn\"\n               startIcon={<SaveIcon />}\n               fullWidth\n            >\n               Save\n            </Button>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = (state) => ({\n   products: state.products.productsList,\n})\n\n// CRUD operation\nconst mapDispatchToProps = (dispatch) => ({\n   addSale: AddSale(dispatch),\n   onGetProducts: GetProducts(dispatch),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddSales)\n","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/addSale.js",["243"],"import { onAddSale } from \"../framework/actions\"\nimport { Popover } from '@material-ui/core';\n\n//This is a usecase for getting the list of sales\nexport const AddSale = (dispatch) => async (fields) => {\n   \n   // const newSale = {\n   //    product_id: fields.productDetails.id,      \n   //    product_number: fields.productDetails.product_num,\n   //    product_name: fields.productDetails.product_name,\n   //    product_category: fields.productDetails.category,\n   //    price_per_unit: fields.productDetails.retail_price,\n   //    quantity: fields.quantity,\n   //    total_price: fields.total_price,\n   //    sold_to: fields.sold_to,\n   //    date_sold: fields.date_sold,\n   //    shipping: fields.shipping,\n   //    tax: fields.tax,\n   //    discount_rate: fields.discount\n   // }\n   \n\n   // first we call a fetch request to update our backend because the backend is the source of truth for our global state\n   try {\n      // console.log(newSale)\n      const response = await fetch(`http://localhost:8000/sales/addNewSale`, {\n         method: \"POST\",\n         headers: {\n            \"Content-Type\": \"application/json\",\n         },\n         body: JSON.stringify(fields),\n      })\n\n      //need to await on parsing response to javascript objects from json\n      const success = await response.json()\n      // console.log(success)\n\n      //pass into our action as a payload and we dispatch it\n      return dispatch(onAddSale(success))\n   } catch (e) {\n      console.log(\"CAUGHT ERROR IN PROMISE\")\n   }\n}\n\nexport default AddSale\n","/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/editSale.js",[],"/Users/katydonoghue/Desktop/silver-thread-client/src/data-tables/use-cases/editMaterial.js",[],{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":18,"column":8,"nodeType":"250","messageId":"251","endLine":18,"endColumn":13},{"ruleId":"248","severity":1,"message":"252","line":19,"column":8,"nodeType":"250","messageId":"251","endLine":19,"endColumn":14},{"ruleId":"248","severity":1,"message":"253","line":1,"column":10,"nodeType":"250","messageId":"251","endLine":1,"endColumn":25},{"ruleId":"248","severity":1,"message":"254","line":1,"column":27,"nodeType":"250","messageId":"251","endLine":1,"endColumn":38},{"ruleId":"248","severity":1,"message":"255","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":26},{"ruleId":"248","severity":1,"message":"256","line":10,"column":10,"nodeType":"250","messageId":"251","endLine":10,"endColumn":17},{"ruleId":"248","severity":1,"message":"257","line":11,"column":10,"nodeType":"250","messageId":"251","endLine":11,"endColumn":19},{"ruleId":"248","severity":1,"message":"256","line":10,"column":10,"nodeType":"250","messageId":"251","endLine":10,"endColumn":17},{"ruleId":"258","severity":1,"message":"259","line":27,"column":7,"nodeType":"260","endLine":27,"endColumn":9,"suggestions":"261"},{"ruleId":"262","severity":1,"message":"263","line":34,"column":1,"nodeType":"264","endLine":34,"endColumn":23},{"ruleId":"248","severity":1,"message":"265","line":4,"column":10,"nodeType":"250","messageId":"251","endLine":4,"endColumn":23},{"ruleId":"248","severity":1,"message":"266","line":58,"column":11,"nodeType":"250","messageId":"251","endLine":58,"endColumn":15},{"ruleId":"248","severity":1,"message":"267","line":58,"column":17,"nodeType":"250","messageId":"251","endLine":58,"endColumn":24},{"ruleId":"258","severity":1,"message":"268","line":68,"column":7,"nodeType":"260","endLine":68,"endColumn":41,"suggestions":"269"},{"ruleId":"258","severity":1,"message":"270","line":58,"column":6,"nodeType":"260","endLine":58,"endColumn":52,"suggestions":"271"},{"ruleId":"258","severity":1,"message":"272","line":51,"column":8,"nodeType":"260","endLine":51,"endColumn":48,"suggestions":"273"},{"ruleId":"274","severity":1,"message":"275","line":160,"column":33,"nodeType":"276","messageId":"277","endLine":160,"endColumn":36},{"ruleId":"248","severity":1,"message":"278","line":2,"column":8,"nodeType":"250","messageId":"251","endLine":2,"endColumn":16},{"ruleId":"248","severity":1,"message":"279","line":3,"column":22,"nodeType":"250","messageId":"251","endLine":3,"endColumn":34},{"ruleId":"248","severity":1,"message":"280","line":3,"column":51,"nodeType":"250","messageId":"251","endLine":3,"endColumn":63},{"ruleId":"281","severity":1,"message":"282","line":68,"column":13,"nodeType":"283","messageId":"284","endLine":80,"endColumn":7},{"ruleId":"285","severity":1,"message":"286","line":68,"column":13,"nodeType":"283","messageId":"287","endLine":80,"endColumn":7},{"ruleId":"248","severity":1,"message":"288","line":18,"column":13,"nodeType":"250","messageId":"251","endLine":18,"endColumn":22},{"ruleId":"262","severity":1,"message":"263","line":216,"column":1,"nodeType":"264","endLine":216,"endColumn":65},{"ruleId":"258","severity":1,"message":"270","line":48,"column":8,"nodeType":"260","endLine":48,"endColumn":10,"suggestions":"289"},{"ruleId":"258","severity":1,"message":"290","line":57,"column":8,"nodeType":"260","endLine":57,"endColumn":28,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":115,"column":51,"nodeType":"294","messageId":"277","endLine":115,"endColumn":53},{"ruleId":"292","severity":1,"message":"293","line":138,"column":71,"nodeType":"294","messageId":"277","endLine":138,"endColumn":73},{"ruleId":"292","severity":1,"message":"293","line":140,"column":84,"nodeType":"294","messageId":"277","endLine":140,"endColumn":86},{"ruleId":"292","severity":1,"message":"295","line":160,"column":98,"nodeType":"294","messageId":"277","endLine":160,"endColumn":100},{"ruleId":"292","severity":1,"message":"293","line":294,"column":37,"nodeType":"294","messageId":"277","endLine":294,"endColumn":39},{"ruleId":"292","severity":1,"message":"293","line":296,"column":40,"nodeType":"294","messageId":"277","endLine":296,"endColumn":42},{"ruleId":"258","severity":1,"message":"296","line":55,"column":8,"nodeType":"260","endLine":55,"endColumn":54,"suggestions":"297"},{"ruleId":"298","severity":1,"message":"299","line":86,"column":9,"nodeType":"300","messageId":"301","endLine":189,"endColumn":10},{"ruleId":"292","severity":1,"message":"293","line":121,"column":51,"nodeType":"294","messageId":"277","endLine":121,"endColumn":53},{"ruleId":"292","severity":1,"message":"293","line":143,"column":96,"nodeType":"294","messageId":"277","endLine":143,"endColumn":98},{"ruleId":"292","severity":1,"message":"293","line":203,"column":59,"nodeType":"294","messageId":"277","endLine":203,"endColumn":61},{"ruleId":"292","severity":1,"message":"293","line":205,"column":41,"nodeType":"294","messageId":"277","endLine":205,"endColumn":43},{"ruleId":"292","severity":1,"message":"293","line":207,"column":38,"nodeType":"294","messageId":"277","endLine":207,"endColumn":40},{"ruleId":"274","severity":1,"message":"275","line":331,"column":33,"nodeType":"276","messageId":"277","endLine":331,"endColumn":36},{"ruleId":"248","severity":1,"message":"302","line":28,"column":31,"nodeType":"250","messageId":"251","endLine":28,"endColumn":51},{"ruleId":"292","severity":1,"message":"293","line":71,"column":31,"nodeType":"294","messageId":"277","endLine":71,"endColumn":33},{"ruleId":"292","severity":1,"message":"293","line":73,"column":42,"nodeType":"294","messageId":"277","endLine":73,"endColumn":44},{"ruleId":"292","severity":1,"message":"293","line":75,"column":29,"nodeType":"294","messageId":"277","endLine":75,"endColumn":31},{"ruleId":"292","severity":1,"message":"293","line":77,"column":35,"nodeType":"294","messageId":"277","endLine":77,"endColumn":37},{"ruleId":"292","severity":1,"message":"293","line":79,"column":32,"nodeType":"294","messageId":"277","endLine":79,"endColumn":34},{"ruleId":"292","severity":1,"message":"293","line":81,"column":33,"nodeType":"294","messageId":"277","endLine":81,"endColumn":35},{"ruleId":"258","severity":1,"message":"272","line":21,"column":7,"nodeType":"260","endLine":21,"endColumn":9,"suggestions":"303"},{"ruleId":"292","severity":1,"message":"293","line":44,"column":35,"nodeType":"294","messageId":"277","endLine":44,"endColumn":37},{"ruleId":"292","severity":1,"message":"293","line":83,"column":52,"nodeType":"294","messageId":"277","endLine":83,"endColumn":54},{"ruleId":"248","severity":1,"message":"304","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":17},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Logout' is defined but never used.","'combineReducers' is defined but never used.","'createStore' is defined but never used.","'useEffect' is defined but never used.","'onLogin' is defined but never used.","'UserLogin' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLoggedUser'. Either include it or remove the dependency array. If 'getLoggedUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["307"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setAutoFreeze' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onGetSales' and 'selectedDate'. Either include them or remove the dependency array. If 'onGetSales' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["308"],"React Hook useEffect has a missing dependency: 'onGetMaterials'. Either include it or remove the dependency array. If 'onGetMaterials' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["309"],"React Hook useEffect has a missing dependency: 'onGetProducts'. Either include it or remove the dependency array. If 'onGetProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["310"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'ReactDOM' is defined but never used.","'VictoryChart' is defined but never used.","'VictoryLabel' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","'localUser' is assigned a value but never used.",["311"],"React Hook useEffect has a missing dependency: 'activeStep'. Either include it or remove the dependency array.",["312"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'onGetMaterials', 'onGetProductByID', and 'productData.id'. Either include them or remove the dependency array. If 'onGetProductByID' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["313"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'setOriginalSalesData' is assigned a value but never used.",["314"],"'Popover' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},"Update the dependencies array to be: [getLoggedUser]",{"range":"331","text":"332"},"Update the dependencies array to be: [salesAdd, salesEdit, salesDelete, onGetSales, selectedDate]",{"range":"333","text":"334"},"Update the dependencies array to be: [materialsEdit, materialsDelete, materialsAdd, onGetMaterials]",{"range":"335","text":"336"},"Update the dependencies array to be: [productDelete, productAdd, productEdit, onGetProducts]",{"range":"337","text":"338"},"Update the dependencies array to be: [onGetMaterials]",{"range":"339","text":"340"},"Update the dependencies array to be: [activeStep, newReturnedProduct]",{"range":"341","text":"342"},"Update the dependencies array to be: [materialDelete, newMaterialItem, editProduct, productData.id, onGetProductByID, onGetMaterials]",{"range":"343","text":"344"},"Update the dependencies array to be: [onGetProducts]",{"range":"345","text":"346"},[711,713],"[getLoggedUser]",[1814,1848],"[salesAdd, salesEdit, salesDelete, onGetSales, selectedDate]",[1892,1938],"[materialsEdit, materialsDelete, materialsAdd, onGetMaterials]",[1671,1711],"[productDelete, productAdd, productEdit, onGetProducts]",[1827,1829],"[onGetMaterials]",[2225,2245],"[activeStep, newReturnedProduct]",[2049,2095],"[materialDelete, newMaterialItem, editProduct, productData.id, onGetProductByID, onGetMaterials]",[781,783],"[onGetProducts]"]