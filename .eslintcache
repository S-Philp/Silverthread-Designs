[{"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/index.js":"1","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/App.js":"2","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/reportWebVitals.js":"3","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/common/redux/store.js":"4","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/ui/register.jsx":"5","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/ui/login.jsx":"6","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/use-cases/UserSignOut.js":"7","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/ui/logout.jsx":"8","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/frameworks/reducers.js":"9","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/framework/reducers.js":"10","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/MaterialsTable.jsx":"11","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/ProductsTable.jsx":"12","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/frameworks/actions.js":"13","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/use-cases/UserRegister.js":"14","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/use-cases/UserLogin.js":"15","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/use-cases/CheckUser.js":"16","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/SalesTable.jsx":"17","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/framework/actions.js":"18","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/deleteProduct.js":"19","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/excelProductsReports.js":"20","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/getProducts.js":"21","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/exelSalesReports.js":"22","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/addMaterial.js":"23","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/getSales.js":"24","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/EditProduct.jsx":"25","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/deleteSale.js":"26","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/AddProducts.jsx":"27","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/EditSales.jsx":"28","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/AddSales.jsx":"29","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/editProduct.js":"30","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/addProduct.js":"31","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/getMaterials.js":"32","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/addSale.js":"33","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/editSale.js":"34","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/editWholesale.js":"35","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/addMaterialItem.js":"36","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/deleteMaterialItem.js":"37","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/getProductByID.js":"38","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/excelMaterialsReports.js":"39","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/deleteMaterial.js":"40","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/EditMaterials.jsx":"41","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/AddMaterials.jsx":"42","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/editMaterial.js":"43","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/ui/forgotPassword.jsx":"44","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/Dashboard.jsx":"45","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/BarChart.jsx":"46","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/PieChart2.jsx":"47","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/LineGraph.jsx":"48","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/SalesBarChart.jsx":"49","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/SalesPieChart.jsx":"50","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/PtmSalesPieChart.jsx":"51","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/BarChart2.jsx":"52","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/PieChart.jsx":"53"},{"size":2439,"mtime":1609961666994,"results":"54","hashOfConfig":"55"},{"size":4365,"mtime":1609963935021,"results":"56","hashOfConfig":"55"},{"size":362,"mtime":1608587676850,"results":"57","hashOfConfig":"55"},{"size":498,"mtime":1609773783236,"results":"58","hashOfConfig":"55"},{"size":3192,"mtime":1609961666996,"results":"59","hashOfConfig":"55"},{"size":11809,"mtime":1609961666995,"results":"60","hashOfConfig":"55"},{"size":437,"mtime":1609792694425,"results":"61","hashOfConfig":"55"},{"size":152,"mtime":1609773783268,"results":"62","hashOfConfig":"55"},{"size":693,"mtime":1609792694421,"results":"63","hashOfConfig":"55"},{"size":7119,"mtime":1609961666991,"results":"64","hashOfConfig":"55"},{"size":5751,"mtime":1609967311755,"results":"65","hashOfConfig":"55"},{"size":6394,"mtime":1609967338178,"results":"66","hashOfConfig":"55"},{"size":265,"mtime":1609792694420,"results":"67","hashOfConfig":"55"},{"size":740,"mtime":1609792694424,"results":"68","hashOfConfig":"55"},{"size":1044,"mtime":1609792694424,"results":"69","hashOfConfig":"55"},{"size":815,"mtime":1609792694424,"results":"70","hashOfConfig":"55"},{"size":10257,"mtime":1609967242641,"results":"71","hashOfConfig":"55"},{"size":1131,"mtime":1609792694394,"results":"72","hashOfConfig":"55"},{"size":803,"mtime":1609773783261,"results":"73","hashOfConfig":"55"},{"size":1103,"mtime":1609773783264,"results":"74","hashOfConfig":"55"},{"size":734,"mtime":1609773783265,"results":"75","hashOfConfig":"55"},{"size":1203,"mtime":1609961666993,"results":"76","hashOfConfig":"55"},{"size":815,"mtime":1609773783258,"results":"77","hashOfConfig":"55"},{"size":763,"mtime":1609773783266,"results":"78","hashOfConfig":"55"},{"size":15599,"mtime":1609954427686,"results":"79","hashOfConfig":"55"},{"size":791,"mtime":1609961666993,"results":"80","hashOfConfig":"55"},{"size":18578,"mtime":1609961666992,"results":"81","hashOfConfig":"55"},{"size":7670,"mtime":1609954427687,"results":"82","hashOfConfig":"55"},{"size":7048,"mtime":1609947791518,"results":"83","hashOfConfig":"55"},{"size":792,"mtime":1609773783263,"results":"84","hashOfConfig":"55"},{"size":767,"mtime":1609792694413,"results":"85","hashOfConfig":"55"},{"size":743,"mtime":1608587676849,"results":"86","hashOfConfig":"55"},{"size":1526,"mtime":1609862109479,"results":"87","hashOfConfig":"55"},{"size":791,"mtime":1609947791520,"results":"88","hashOfConfig":"55"},{"size":798,"mtime":1609773783263,"results":"89","hashOfConfig":"55"},{"size":524,"mtime":1609773783259,"results":"90","hashOfConfig":"55"},{"size":496,"mtime":1609773783261,"results":"91","hashOfConfig":"55"},{"size":718,"mtime":1609773783265,"results":"92","hashOfConfig":"55"},{"size":983,"mtime":1609773783264,"results":"93","hashOfConfig":"55"},{"size":798,"mtime":1609773783260,"results":"94","hashOfConfig":"55"},{"size":3754,"mtime":1609954427685,"results":"95","hashOfConfig":"55"},{"size":4409,"mtime":1609954427682,"results":"96","hashOfConfig":"55"},{"size":781,"mtime":1609773783262,"results":"97","hashOfConfig":"55"},{"size":3097,"mtime":1609961666994,"results":"98","hashOfConfig":"55"},{"size":2355,"mtime":1609961666988,"results":"99","hashOfConfig":"55"},{"size":1568,"mtime":1609961666987,"results":"100","hashOfConfig":"55"},{"size":3128,"mtime":1609961666989,"results":"101","hashOfConfig":"55"},{"size":1767,"mtime":1609961666988,"results":"102","hashOfConfig":"55"},{"size":3330,"mtime":1609961666990,"results":"103","hashOfConfig":"55"},{"size":3419,"mtime":1609961666990,"results":"104","hashOfConfig":"55"},{"size":3387,"mtime":1609961666989,"results":"105","hashOfConfig":"55"},{"size":3472,"mtime":1609961666987,"results":"106","hashOfConfig":"55"},{"size":8589,"mtime":1609961666989,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n318rg",{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"119"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"119"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"119"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"119"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"119"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/index.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/App.js",["221","222","223","224"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/reportWebVitals.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/common/redux/store.js",["225","226"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/ui/register.jsx",["227","228","229"],"import React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\"\nimport { NavLink } from \"react-router-dom\"\n\n\n\nimport \"./login.css\"\nimport { onLogin } from '../frameworks/actions';\nimport { UserLogin } from '../use-cases/UserLogin'\nimport { UserRegister } from '../use-cases/UserRegister'\n\nconst Register = ({onRegister}) => {\n\n    const [fields, setFields] = useState({})\n\n    const setField = (evt) => {\n        setFields({\n            ...fields,\n            [evt.target.name]: evt.target.value\n        })\n    }\n    console.log(fields)\n    return (\n        <div className=\"login-component\">\n            <div className=\"left-container\">\n                <h2 className=\"blurb\">A Data Managment User Interface for Silver Thread Designs</h2>\n                <h2 className=\"blurb\">Handle your business logic via linked tables and graphical interfaces</h2>\n            </div>\n\n            <div className=\"register-container\">\n                <h2 className = \"login-blurb\">Register Here</h2>\n                <div className=\"login-box\">\n                    <div className=\"login-input\"><TextField id=\"outlined-basic\" label=\"First Name\" variant=\"outlined\" name = \"firstname\" onChange = {setField}/></div>\n                    <div className=\"login-input\"><TextField id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" name = \"lastname\" onChange = {setField}/></div>\n                    <div className=\"login-input\"><TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" name = \"username\" onChange = {setField}/></div>\n                    <div className=\"login-input\"><TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" name = \"password\" type = \"password\" onChange = {setField}/></div>\n                    <div className = \"button-container\">\n                        <NavLink to= \"/login\">\n                            <Button className =\"login-button\" variant=\"outlined\" onClick = {() => {onRegister(fields)}}>Login</Button>\n                        </NavLink>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, {materials}) => ({\n    user: state.login.currentUser,\n  })\n  \n  const mapDispatchToProps = (dispatch) => ({\n    onRegister: UserRegister(dispatch)\n  })\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\n\n",["230","231"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/ui/login.jsx",["232","233"],"import React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\"\nimport { NavLink, Redirect } from \"react-router-dom\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { Container, AppBar, Grid, Card, CardMedia, ThemeProvider, CssBaseline } from '@material-ui/core';\nimport LeagueSparatanBoldWoff2 from '../../fonts/leaguespartan-bold-webfont.woff2'\n\n\n\nimport \"./login.css\"\nimport { onLogin } from '../frameworks/actions';\nimport { UserLogin } from '../use-cases/UserLogin'\nimport { CheckUser } from '../use-cases/CheckUser'\n\nimport logo from '../images/logo.png'\nimport ST_3 from '../images/ST_3.jpg';\nimport ST_4 from '../images/ST_4.jpg';\nimport ST_5 from '../images/ST_5.jpg';\nimport ST_6 from '../images/ST_6.jpg';\nimport ST_7 from '../images/ST_7.jpg';\nimport ST_8 from '../images/ST_8.jpg';\nimport ST_9 from '../images/ST_9.jpg';\nimport ST_10 from '../images/ST_10.jpg';\nimport ST_11 from '../images/ST_11.jpg';\nimport ST_12 from '../images/ST_12.jpg';\nimport ST_13 from '../images/ST_13.jpg';\nimport ST_14 from '../images/ST_14.jpg';\n\nconst league_spartanbold = {\n    fontFamily: 'League Spartan',\n    fontStyle: 'bold',\n    fontDisplay: 'swap',\n    fontWeight: 400,\n    src: `\n      local('League-Spartan'),\n      local('League-Spartan-Bold'),\n      url(${LeagueSparatanBoldWoff2}) format('woff2')\n    `,\n    unicodeRange:\n      'U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF',\n  };\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: theme.background,\n    },\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n      },\n      appBar: {\n        borderRadius: 15,\n        // marginTop: '-25px',\n        marginTop: '5px',\n        marginBottom: '30px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'white',\n        color: '#5f5f5f',\n      },\n      media: {\n        height: 300,\n      },\n      card: {\n        maxHeight: 1000,\n        maxWidth: 400,\n      },\n      image: {\n          borderRadius: 16,\n      },\n      big: {\n          backgroundColor: '#4db6ac',\n      },\n      typography: {\n        fontFamily: 'League-Spartan, Bold',\n      },\n      overrides: {\n        MuiCssBaseline: {\n          '@global': {\n            '@font-face': [league_spartanbold],\n          },\n        },\n      },\n  }));\n\n\nconst Login = ({onLogin, getLoggedUser, user}) => {\n\n    const [fields, setFields] = useState({})\n\n    const setField = (evt) => {\n        setFields({\n            ...fields,\n            [evt.target.name]: evt.target.value\n        })\n    }\n\n    useEffect(() => {\n        getLoggedUser()\n    },[])\n    console.log(fields)\n\n    const classes = useStyles();\n    \n    const [open, setOpen] = React.useState(false);\n  \n    const handleOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const theme = {\n        background: \"linear-gradient(45deg, green 30%, blue 90%)\"\n      };\n\n    return (\n        <CssBaseline>\n        <ThemeProvider theme={theme}>\n            <Container className={classes.big} maxWidth=\"xlg\" flexDirection=\"column\">\n                <AppBar position=\"static\" className={classes.appBar}>\n                    <Toolbar>\n                    <img className={classes.image} src={logo} alt=\"logo\" height=\"60\" />\n                    <Button color=\"inherit\" onClick={handleOpen}>Login</Button>\n                    <Button color=\"inherit\" onClick={handleClose}>Logout</Button>\n                    </Toolbar>\n                        <Modal\n                            aria-labelledby=\"transition-modal-title\"\n                            aria-describedby=\"transition-modal-description\"\n                            className={classes.modal}\n                            open={open}\n                            onClose={handleClose}\n                            closeAfterTransition\n                            BackdropComponent={Backdrop}\n                            BackdropProps={{\n                                timeout: 500,\n                            }}\n                            >\n                            <Fade in={open}>\n                                <div className={classes.paper}>\n                                    <div className=\"login-container\">\n                                        <h2 className = \"login-blurb\">Silverthread Designs</h2>\n                                        <div className=\"login-box\">\n                                            <div className=\"login-input\"><TextField id=\"outlined-basic\" label=\"Username\" variant=\"outlined\" name = \"username\" onChange = {setField}/></div>\n                                            <div className=\"login-input\"><TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" type = \"password\" name = \"password\" onChange = {setField}/></div>\n                                            <div>Not a user? <NavLink to=\"/register\"> Register</NavLink> and get permission from a moderator!</div>\n                                            <div className = \"button-container\">\n                                            <Button onClick = {()=>onLogin(fields)}className =\"login-button\"variant=\"outlined\">Login</Button>\n                                            {Object.keys(user).length>0 ? <Redirect to=\"/\"/> : <div></div>}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Fade>\n                        </Modal>\n                    </AppBar>\n                 <Grid container flexGrow={1} justify=\"space-between\" alignItems=\"center\" spacing={3} justify=\"center\" flexDirection=\"row\">\n                     <Grid item xs={6} sm={3}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                className={classes.media}\n                                image={ST_3}\n                                title=\"Drop Earrings\"\n                                />\n                            </Card>\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                className={classes.media}\n                                image={ST_4}\n                                title=\"Drop Earrings\"\n                                />\n                            </Card>\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                className={classes.media}\n                                image={ST_5}\n                                title=\"Drop Ring\"\n                                />\n                            </Card>\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                className={classes.media}\n                                image={ST_6}\n                                title=\"Drop Ring\"\n                                />\n                            </Card>\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                className={classes.media}\n                                image={ST_7}\n                                title=\"Drop Necklace\"\n                                />\n                            </Card>\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                className={classes.media}\n                                image={ST_8}\n                                title=\"Drop Bracelet\"\n                                />\n                            </Card>\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                className={classes.media}\n                                image={ST_9}\n                                title=\"Mezuzah\"\n                                />\n                            </Card>\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                className={classes.media}\n                                image={ST_10}\n                                title=\"Drop Earrings\"\n                                />\n                            </Card>\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                className={classes.media}\n                                image={ST_11}\n                                title=\"Drop Earrings\"\n                                />\n                            </Card>\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                className={classes.media}\n                                image={ST_12}\n                                title=\"Drop Necklace\"\n                                />\n                            </Card>\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                className={classes.media}\n                                image={ST_13}\n                                title=\"Mezuzah\"\n                                />\n                            </Card>\n                        </Grid>\n                        <Grid item xs={6} sm={3}>\n                            <Card className={classes.card}>\n                                <CardMedia\n                                className={classes.media}\n                                image={ST_14}\n                                title=\"Reticulated Silver Earrings\"\n                                />\n                            </Card>\n                        </Grid>\n                 </Grid>\n        </Container>\n        </ThemeProvider>\n        </CssBaseline>\n    )\n}\n\nconst mapStateToProps = (state, {materials}) => ({\n    user: state.login.currentUser,\n  })\n  \n  const mapDispatchToProps = (dispatch) => ({\n    onLogin: UserLogin(dispatch),\n    getLoggedUser: CheckUser(dispatch)\n\n  })\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n\n","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/use-cases/UserSignOut.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/ui/logout.jsx",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/frameworks/reducers.js",["234"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/framework/reducers.js",["235"],"import { createReducer } from '@reduxjs/toolkit';\n\nimport {\n    onGetMaterials,\n    onAddMaterial,\n    onDeleteMaterial,\n    onEditMaterial,\n    onGetSales,\n    onDeleteSale,\n    onAddSale,\n    onEditSale,\n    onAddProduct,\n    onGetProducts,\n    onDeleteProduct,\n    onEditProduct,\n    onGetProductByID,\n    onDeleteMaterialItem,\n    onAddNewMaterial,\n    onUpdateWholesale,\n} from './actions';\n\nexport const materials = createReducer(\n    {\n        materialsList: [],\n        byId: {},\n        materialID: '',\n        materialAdd: '',\n        materialEdit: '',\n    },\n    {\n        [onGetMaterials.type]: (state, { payload: material }) => {\n            if (material === null) {\n                return state;\n            }\n            state.materialsList = material;\n            material.forEach((item) => {\n                state.byId[item.id] = item;\n            });\n        },\n\n        [onAddMaterial.type]: (state, { payload: material }) => {\n            if (material === null) {\n                return state;\n            }\n            state.materialsList = [...state.materialsList, material];\n            state.byId[material.id] = material;\n        },\n\n        [onDeleteMaterial.type]: (state, { payload: materialid }) => {\n            if (materialid === null) {\n                return state;\n            }\n            state.materialID = materialid;\n            delete state.byId[materialid.deletedMaterial];\n        },\n        /*\n            [onAddMaterial.type]: (state, {payload: materialDetails }) => {\n                if (materialDetails === null) {\n                    return state\n                }\n                state.materialAdd = materialDetails\n            },*/\n        [onEditMaterial.type]: (state, { payload: materialEdits }) => {\n            if (materialEdits === null) {\n                return state;\n            }\n            state.materialEdit = materialEdits;\n        },\n    }\n);\n\nexport const sales = createReducer(\n    {\n        salesList: [],\n        byId: {},\n        salesByCategories: {},\n        salesByPtm: {\n            ptm: [],\n            other: []\n        },\n        totalsByMonth: {},\n        saleID: '',\n        saleEdits: {},\n    },\n    {\n        [onAddSale.type]: (state, { payload: sale }) => {\n            if (sale === null) {\n                return state;\n            }\n            state.salesList = [...state.salesList, sale];\n            state.byId[sale.id] = sale;\n        },\n\n        [onGetSales.type]: (state, { payload: salesList }) => {\n            if (salesList === null) {\n                return state;\n            }\n            state.salesByCategories = {}\n            state.salesByPtm = {\n                ptm:[],\n                other: []\n            }\n\n            salesList.forEach((sale) => {\n                if(sale.sold_PTM === true) {\n                    if (!state.salesByPtm.ptm){\n                        state.salesByPtm.ptm = sale\n                    }\n                    else{\n                        state.salesByPtm.ptm = [...state.salesByPtm.ptm, sale]\n                    }\n                }\n                else{\n                    if (!state.salesByPtm.other){\n                        state.salesByPtm.other = sale\n                    }\n                    else{\n                        state.salesByPtm.other = [...state.salesByPtm.other, sale]\n                    }\n                }\n\n                state.byId[sale.id] = sale\n                if (!state.salesByCategories[sale.product_category]) {\n                    state.salesByCategories[sale.product_category] = [sale]\n                }\n                else {\n                    state.salesByCategories[sale.product_category] = [...state.salesByCategories[sale.product_category], sale]\n                }\n            })\n            state.salesList = salesList\n        },\n        [onDeleteSale.type]: (state, { payload: saleid }) => {\n            if (saleid === null) {         \n                return state\n            }           \n            state.saleID = saleid\n        },\n        [onAddSale.type]: (state, { payload: newSaleId }) => {\n            if (newSaleId === null) {\n                return state\n            }\n            state.newSaleId = newSaleId\n        },\n        [onEditSale.type]: (state, { payload: saleDetails }) => {\n            if (saleDetails === null) {\n                return state\n            }\n            state.saleEdits = saleDetails\n        }\n    }\n)\n\nexport const products = createReducer(\n    {\n        productsList: [],\n        byCategories: {},\n        byId: {},\n        productsDelete: '',\n        newProduct: {},\n        productListing: {},\n    },\n    {\n        [onGetProducts.type]: (state, { payload: products }) => {\n            if (products === null) {\n                return state;\n            }\n            state.productsList = products;\n            state.byCategories = {}\n\n            products.forEach((product) => {\n                state.byId[product.id] = product\n                if (!state.byCategories[product.category]) {\n                    state.byCategories[product.category] = [product]\n                }\n                else {\n                    state.byCategories[product.category] = [...state.byCategories[product.category], product]\n                }\n            })\n\n\n        },\n\n        [onDeleteProduct.type]: (state, { payload: productid }) => {\n            if (productid === null) {\n                return state\n            }\n            state.productsDelete = productid\n        },\n        [onAddProduct.type]: (state, { payload: newProduct }) => {\n            if (newProduct === null) {\n                return state\n            } else {\n                state.newProduct = newProduct\n            }\n\n        },\n        [onEditProduct.type]: (state, { payload: editedProduct }) => {\n            if (editedProduct === null) {\n                return state\n            } else {\n                state.editedProduct = editedProduct\n            }\n        },\n        [onGetProductByID.type]: (state, { payload: productListing }) => {\n            if (productListing === null) {\n                return state\n            } else {\n                state.productListing = productListing\n            }\n\n        },\n        [onUpdateWholesale.type]: (state, { payload: productDetails }) => {\n            if (productDetails === null) {\n                return state\n            } else {\n                state.editedProduct = productDetails\n            }\n\n        }\n    }\n)\n\nexport const materialByProduct = createReducer(\n    {\n        materialItem: {},\n        newMaterial: [],\n    },\n    {\n        [onDeleteMaterialItem.type]: (state, { payload: materialID }) => {\n            if (materialID === null) {\n                return state;\n            } else {\n                state.materialItem = materialID;\n            }\n        },\n        [onAddNewMaterial.type]: (state, { payload: newMaterial }) => {\n            if (newMaterial === null) {\n                return state;\n            } else {\n                state.newMaterial = newMaterial;\n            }\n        },\n    }\n);\n\nexport default { materials, sales, products, materialByProduct };\n","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/MaterialsTable.jsx",["236"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/ProductsTable.jsx",["237","238"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/frameworks/actions.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/use-cases/UserRegister.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/use-cases/UserLogin.js",["239"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/use-cases/CheckUser.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/SalesTable.jsx",["240","241","242","243"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/framework/actions.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/deleteProduct.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/excelProductsReports.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/getProducts.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/exelSalesReports.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/addMaterial.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/getSales.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/EditProduct.jsx",["244","245","246","247"],"import './EditProduct.css'\nimport { connect } from 'react-redux'\nimport { useEffect, useState } from 'react'\nimport { GetProductByID } from '../use-cases/getProductByID'\nimport { GetMaterials } from '../use-cases/getMaterials'\nimport { EditProductDetails } from '../use-cases/editProduct'\nimport { DeleteMaterialItem } from '../use-cases/deleteMaterialItem'\nimport { AddNewMaterial } from '../use-cases/addMaterialItem'\nimport { UpdateWholesale } from '../use-cases/editWholesale'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Button from '@material-ui/core/Button'\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n//for material ui components\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n}));\n\n\nconst EditProduct = ({ productData, onGetProductByID, productListing, onGetMaterials, materials, onEditProduct, onDeleteMaterialItem, materialDelete, onAddNewMaterial, newMaterialItem, onUpdateWholesale, closeEditModal, editProduct }) => {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = useState(0);\n\n    const [productDetails, setProductDetails] = useState({})\n    const [newMaterial, setNewMaterial] = useState({ product_id: productData.id, material_unit_amount: '', })\n    const [itemMaterialsList, setItemMaterialsList] = useState([])\n\n    const steps = getSteps();\n\n    useEffect(() => {\n        let id = productData.id\n        onGetProductByID(id)\n        onGetMaterials()\n    }, [materialDelete, newMaterialItem, editProduct])\n\n    useEffect(() => {\n        setProductDetails(productListing)\n\n        if (productListing.MaterialByProdNums) {\n            setItemMaterialsList(productListing.MaterialByProdNums)\n        } else {\n            setItemMaterialsList([])\n        }\n    }, [productListing])\n\n    //handles changes to product listing from textboxes\n    const handleOnChange = (e) => {\n        setProductDetails({\n            ...productDetails,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    let materialItem = itemMaterialsList.map(item => {\n        return <div className='materialItem' key={item.id}> {item.material_name}: {item.material_unit_amount} @ ${item.material_cost.toFixed(2)} each <IconButton onClick={() => onDeleteMaterialItem(item.id)} aria-label=\"delete\"><DeleteIcon /></IconButton></div>\n    })\n\n    //these are the steps shown at the top of the stepper\n    function getSteps() {\n        return ['Edit Product Details', 'Edit Wholesale Price'];\n    }\n\n    function getStepContent(step) {\n\n        switch (step) {\n            case 0:\n                return (\n                    <div className=\"editProductContainer\">\n                        <div className='textInput'>\n                            <TextField name='product_name' value={productDetails.product_name} onChange={handleOnChange} id=\"outlined-basic\" label=\"Product Name\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} fullWidth />\n                        </div>\n                        <div className='textInput'>\n                            <TextField name='product_num' value={productDetails.product_num} onChange={handleOnChange} id=\"outlined-basic\" label=\"Product Number\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} fullWidth />\n                        </div>\n                        <div className='textInput'>\n                            <TextField name='category' value={productDetails.category} onChange={handleOnChange} id=\"outlined-basic\" label=\"Category\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} fullWidth />\n                        </div>\n                        <div className='textInput'>\n                            <TextField name='wholesale' value={productDetails.wholesale} onChange={handleOnChange} id=\"outlined-basic\" label=\"Wholesale Price\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} fullWidth />\n                        </div>\n                        <div className='textInput'>\n                            <TextField name='retail_price' value={productDetails.retail_price} onChange={handleOnChange} id=\"outlined-basic\" label=\"Retail Price\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} fullWidth />\n                        </div>\n                        <div className='textInput'>\n                            <TextField name='quantity' value={productDetails.quantity} onChange={handleOnChange} id=\"outlined-basic\" label=\"Inventory (Onsite)\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} fullWidth />\n                        </div>\n                        <div className='textInput'>\n                            <TextField name='quantity_painted_tree' value={productDetails.quantity_painted_tree} onChange={handleOnChange} id=\"outlined-basic\" label=\"Inventory (PTM)\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} fullWidth />\n                        </div>\n                    </div>\n                );\n\n            //Input materials and quantity into MaterialsList   \n            case 1:\n                //STEP 2 -handles selection on material from selection picker\n                const handleMaterialInput = (e) => {\n                    let materialItem = e.target.value\n\n                    let material = materials.find(item => {\n                        return item.material_name == materialItem\n                    })\n\n                    setNewMaterial({\n                        ...newMaterial,\n                        material\n                    })\n                }\n\n                //inputs quantity of materials\n                const handleQuantityInput = (e) => {\n                    setNewMaterial({\n                        ...newMaterial,\n                        [e.target.name]: e.target.value\n                    })\n                }\n\n                const handleAddNewMaterial = (addMaterial) => {\n                    let material_unit_amount = +addMaterial.material_unit_amount\n                   \n                    if (!addMaterial.material) {\n                        alert(\"Please select a material\")\n                    } else if (isNaN(material_unit_amount) || addMaterial.material_unit_amount == '') {\n                        alert(\"Please enter a quantity\")                 \n                    } else {\n                        onAddNewMaterial(addMaterial)\n                    }                    \n                }\n\n                return (\n                    <div>\n                        <div className='textInput'>\n                            <div><h2>Edit Materials</h2>\n                                {/* <b>Current Materials List:</b>\n                                {materialItem} */}\n                            </div>\n                            <b>Add New Material:</b>\n                        </div>\n                        <div className='textInput'>\n                            <Autocomplete\n                                id=\"free-solo-demo\"\n                                freeSolo\n                                options={materials.map((option) => option.material_name)}\n                                renderInput={(params) => (\n                                    <TextField {...params} name='material' onSelect={handleMaterialInput} label=\"Select Material\" margin=\"normal\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </div>\n                        <div className='textField'>\n                            <TextField name=\"material_unit_amount\" value={newMaterial.material_unit_amount} onChange={handleQuantityInput} id=\"outlined-basic\" label=\"Quantity\" variant=\"outlined\" fullWidth />\n                        </div>\n                        <div className='textInput'>\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => handleAddNewMaterial(newMaterial)} className={classes.button} fullWidth >\n                                Add Material\n                            </Button>\n                        </div>\n                        <div className='textInput'>\n                            <b>Current Materials List:</b>\n                            {materialItem}\n                        </div>\n                        <div className='laborContainer'>\n                            <h2>Edit Labor</h2>\n                            <form className={classes.root} noValidate autoComplete=\"off\">\n                                <TextField name='labor' value={productDetails.labor} onChange={handleOnChange} id=\"outlined-basic\" label=\"Labor (Minutes)\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} fullWidth />\n                            </form>\n                        </div>\n                    </div>\n                );\n        }\n    }\n    // OnClick Functions For Stepper:\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const validate = (product) => {\n        let quantity = +product.quantity\n        let quantity_painted_tree = +product.quantity_painted_tree\n        let retail = +product.retail_price\n        let wholesale = +product.wholesale        \n\n        if (!product.product_name || product.product_name == '') {\n            alert('Please enter a product name')\n        } else if (product.retail_price == '' || isNaN(retail)) {\n            alert('Please enter a retail price')\n        } else if (product.wholesale == '' || isNaN(wholesale)) {\n            alert('Please enter a wholesale price')\n        } else if (isNaN(quantity)) {\n            alert('Inventory(Onsite) must be entered as a whole number')\n        } else if (isNaN(quantity_painted_tree)) {\n            alert('Inventory(PTM) must be entered as a whole number')\n        } else {\n            return true\n        }\n    }\n\n    //next button on first pg of modal\n    const handleNext = (product) => {\n\n        let validation = validate(product)\n\n        if (validation) {\n            onEditProduct(product)\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        }\n    };\n\n\n    //save button on first pg of modal\n    const handleComplete = (product) => {\n\n        let validation = validate(product)\n\n        if (validation) {\n            onEditProduct(product)\n            closeEditModal()\n        }\n    };\n\n    //save button on second pg of modal\n    const handleWholesaleUpdate = (product) => {\n        let labor = +product.labor\n\n        if (isNaN(labor)) {\n            alert('Please enter labor time')\n        } else {\n            onUpdateWholesale(product)\n            setActiveStep((prevActiveStep) => prevActiveStep - 1);\n        }\n    }\n\n    return (\n        <div className=\"addProductsContainer\">\n            <h2>Edit Product</h2>\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep}>\n                    {steps.map((label, index) => {\n                        const stepProps = {};\n                        const labelProps = {};\n\n                        return (\n                            <Step key={label} {...stepProps}>\n                                <StepLabel {...labelProps}>{label}</StepLabel>\n                            </Step>\n                        );\n                    })}\n\n                </Stepper>\n                <div>\n                    {activeStep === steps.length ? (\n                        <div>\n                            <Typography className={classes.instructions}>\n                                All steps completed. Your product is now live.\n                                </Typography>\n                        </div>\n                    ) : (\n                            <div>\n                                <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n                                <div>\n                                    <Button disabled={activeStep === 0 || activeStep === 2} onClick={handleBack} className={classes.button}>\n                                        Back\n                                    </Button>\n\n                                    {/* this button shows on the first step and takes the input for the product details */}\n                                    {activeStep === 0 ? <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => handleNext(productDetails)}\n                                        className={classes.button}\n                                    >\n                                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                    </Button>\n                                        : null}\n\n                                    {activeStep === 0 ?\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={() => handleComplete(productDetails)}\n                                            className={classes.button}\n                                            startIcon={<SaveIcon />}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Save'}\n                                        </Button>\n\n                                        : null}\n\n                                    {/* This button shows on the wholesale pricing step */}\n                                    {activeStep === 1 ?\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={() => handleWholesaleUpdate(productDetails)}\n                                            className={classes.button}\n                                            startIcon={<SaveIcon />}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Save' : 'Save'}\n                                        </Button>\n                                        : null}\n                                </div>\n                            </div>\n                        )}\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nconst mapStateToProps = (state, { }) => ({\n    productListing: state.products.productListing,\n    materials: state.materials.materialsList,\n    materialDelete: state.materialByProduct.materialItem,\n    newMaterialItem: state.materialByProduct.newMaterial,\n    editProduct: state.products.editedProduct\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    onGetProductByID: GetProductByID(dispatch),\n    onGetMaterials: GetMaterials(dispatch),\n    onEditProduct: EditProductDetails(dispatch),\n    onDeleteMaterialItem: DeleteMaterialItem(dispatch),\n    onAddNewMaterial: AddNewMaterial(dispatch),\n    onUpdateWholesale: UpdateWholesale(dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProduct)","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/deleteSale.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/AddProducts.jsx",["248","249","250","251","252","253","254","255"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport './AddProducts.css'\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport { GetMaterials } from \"../use-cases/getMaterials\"\nimport { AddProduct } from \"../use-cases/addProduct\"\nimport EditProductDetails from '../use-cases/editProduct';\n\n//for material ui components\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n}));\n\nconst AddProducts = ({ onGetMaterials, materials, newReturnedProduct, onAddProduct, onAddRetail, }) => {\n\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [newProduct, setNewProduct] = useState({ 'product_name': '', 'product_num': '', 'category': '', 'labor': '' })\n    const [returnedProduct, setReturnedProduct] = useState({})\n    const [materialToAdd, setMaterialToAdd] = useState({ 'material_unit_amount': '' })\n    const [addedMaterialsList, setAddedMaterialsList] = useState([])\n\n    const steps = getSteps();\n\n    //gets materials for selector in add materials step on load\n    useEffect(() => {\n        onGetMaterials()\n    }, [])\n\n    //updates returned product, resets new product, and moves stepper forward when returned product is received\n    useEffect(() => {\n        setReturnedProduct(newReturnedProduct)\n        if (activeStep > 0) {\n            setNewProduct({ 'product_name': '', 'product_num': '', 'category': '', 'labor': '' })\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        }\n    }, [newReturnedProduct])\n\n\n    //these are the steps shown at the top of the stepper\n    function getSteps() {\n        return ['Enter Product', 'Add Materials', 'Set Pricing'];\n    }\n\n    function getStepContent(step) {\n\n        switch (step) {\n            //Input product name, product number, categorgy, labor time\n            case 0:\n                //list of jewelry categories to choose from\n                const category = [{ title: 'Earrings' }, { title: 'Necklaces' }, { title: 'Bracelets' }, { title: 'Rings' }, { title: 'Mezuzzahs' }, { title: 'Brooches' }, { title: 'Chains' }, { title: 'Other' }]\n\n                //handles the input of the product name and number\n                const handleProductInput = (e) => {\n                    setNewProduct({\n                        ...newProduct,\n                        [e.target.name]: e.target.value\n                    })\n                }\n\n                return (\n                    <div className=\"productDetailContainer\">\n\n                        <h4>Enter Product Details</h4>\n                        <div className=\"textField\">\n                            <TextField name=\"product_name\" onChange={handleProductInput} value={newProduct.product_name} id=\"outlined-basic\" label=\"Product Name\" variant=\"outlined\" fullWidth />\n                        </div>\n                        <div className=\"textField\">\n                            <TextField name=\"product_num\" onChange={handleProductInput} value={newProduct.product_num} id=\"outlined-basic\" label=\"Product Number\" variant=\"outlined\" fullWidth />\n                        </div>\n                        <div className=\"textField\">\n                            <Autocomplete\n                                id=\"free-solo-demo\"\n                                freeSolo\n                                options={category.map((option) => option.title)}\n                                renderInput={(params) => (\n                                    <TextField {...params} name='category' onSelect={handleProductInput} value={newProduct.category} label=\"Category\" margin=\"normal\" variant=\"outlined\" fullWidth />\n                                )} handleProductInput\n                            />\n                        </div>\n                        <div className=\"textField\">\n                            <TextField name=\"labor\" onChange={handleProductInput} value={newProduct.labor} id=\"outlined-basic\" label=\"Labor (minutes)\" variant=\"outlined\" fullWidth />\n                        </div>\n                    </div>\n                );\n\n            //Input materials and quantity into MaterialsList   \n            case 1:\n                //STEP 2 -gets the material details for the selected material from teh selector and adds\n                //to materialToAdd - this is the step prior to adding to the material array\n                const handleMaterialInput = (e) => {\n                    let materialItem = e.target.value\n\n                    let material = materials.find(item => {\n                        return item.material_name == materialItem\n                    })\n\n                    //sets into material to add array\n                    setMaterialToAdd({\n                        ...materialToAdd,\n                        material\n                    })\n                }\n\n                //inputs quantity of materials into materialToAdd\n                const handleQuantityInput = (e) => {\n                    setMaterialToAdd({\n                        ...materialToAdd,\n                        [e.target.name]: e.target.value\n                    })\n                }\n\n                //adds material in materialToAdd into the MaterialsArry\n                const addToMaterialList = (addMaterial) => {\n\n                    let material_unit_amount = +addMaterial.material_unit_amount\n\n                    if (!addMaterial.material || addMaterial.material == '') {\n                        alert('Please select a material')\n                    } else if (isNaN(material_unit_amount) || material_unit_amount == '') {\n                        alert('Please enter a quantity')\n                    } else {\n                        setAddedMaterialsList([...addedMaterialsList,\n                        {\n                            material_id: addMaterial.material.id,\n                            material_name: addMaterial.material.material_name,\n                            unit_price: addMaterial.material.unit_price.toFixed(2),\n                            material_unit_amount: addMaterial.material_unit_amount,                            \n                        }\n                        ])\n\n                        setMaterialToAdd({                        \n                            material_unit_amount: ''\n                        })\n                    }\n                }\n\n                //allows user to delete added materials before saving to db\n                const deleteMaterial = (id) => {\n                    let updatedMaterialList = addedMaterialsList.filter(item => item.material_id != id)\n                    setAddedMaterialsList(updatedMaterialList)\n                }\n\n                //map through materials in MaterialsList to show what has been added\n                const displayMaterialList = addedMaterialsList.map(item => {                   \n                    return <div key={item.material_id}>{item.material_name}: {item.material_unit_amount} @ ${item.unit_price} each <IconButton onClick={() => deleteMaterial(item.material_id)} aria-label=\"delete\"><DeleteIcon /></IconButton></div>\n                })\n\n\n                return (\n                    <div>\n                        <div className='textField'>\n                            <b>Select Materials:</b>\n                        </div>\n                        <div className='textField'>\n                            <Autocomplete\n                                id=\"free-solo-demo\"\n                                freeSolo\n                                options={materials.map((option) => option.material_name)}\n                                renderInput={(params) => (\n                                    <TextField {...params} name='material' onSelect={handleMaterialInput} label=\"Select Material\" margin=\"normal\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </div>\n                        <div className='textField'>\n                            <TextField name=\"material_unit_amount\" value={materialToAdd.material_unit_amount} onChange={handleQuantityInput} id=\"outlined-basic\" label=\"Quantity\" variant=\"outlined\" fullWidth />\n                        </div>\n                        <div className='textField'>\n                            <Button onClick={() => addToMaterialList(materialToAdd)} variant=\"contained\" color=\"primary\" className={classes.button} >\n                                Add Material\n                            </Button>\n                        </div>\n                        {addedMaterialsList.length >= 1 ? <div className=\"addedMaterials\">\n                            <b>Added Materials: </b>\n                            {displayMaterialList}\n                        </div> : null}\n\n                    </div>\n                );\n\n\n            // list all product details and add retail price and inventory    \n            case 2:\n                const handleSetPricing = (e) => {\n                    setReturnedProduct({\n                        ...returnedProduct,\n                        [e.target.name]: e.target.value\n                    })\n                }\n\n                return <div className=\"pricingContainer\">\n                    <h4>Set Pricing and Inventory</h4>\n                    <label><b>Name:</b> {returnedProduct.product_name}</label>\n                    <label><b>Product number:</b> {returnedProduct.product_num}</label>\n                    <label><b>Category:</b> {returnedProduct.category}</label>\n                    <label><b>Wholesale Price:</b> ${returnedProduct.wholesale.toFixed(2)}</label>\n                    \n                    <div className='pricingInputs'>\n                        <h3>Add Retail Price:</h3>\n                        <form className={classes.root} noValidate autoComplete=\"off\">\n                            <TextField name='retail_price' onChange={handleSetPricing} id=\"outlined-basic\" label=\"Retai Price\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} fullWidth />\n                        </form>\n                    </div>\n                    <div className='pricingInputs'>\n                        <h3>Add Inventory - Onsite:</h3>                    \n                        <form className={classes.root} noValidate autoComplete=\"off\">\n                            <TextField name='quantity' onChange={handleSetPricing} id=\"outlined-basic\" label=\"Inventory (Onsite)\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} fullWidth />\n                        </form>\n                    </div>\n                    <div className='pricingInputs'>\n                    <h3>Add Inventory - Painted Tree:</h3>                      \n                        <form className={classes.root} noValidate autoComplete=\"off\">\n                            <TextField name='quantity_painted_tree' onChange={handleSetPricing} id=\"outlined-basic\" label=\"Inventory (PTM)\" variant=\"outlined\" InputLabelProps={{ shrink: true, }} fullWidth />\n                        </form>\n                    \n                    </div>\n                </div>\n            default:\n                return 'Unknown step';\n        }\n    }\n\n    // OnClick Functions For Stepper:\n\n    //handles adding newProduct and materials to db from on click\n    const addProductToDB = async (product, listMaterials) => {\n\n        const addProduct = {\n            product_name: product.product_name,\n            product_num: product.product_num,\n            product_id: product.product_id,\n            category: product.category,\n            labor: product.labor,\n            materials: listMaterials\n        }\n        //call function here pass in addProduct\n        onAddProduct(addProduct)\n    }\n\n    //from onclick in last step add retail price and inventory to the db\n    const addRetailPriceToDB = async (finalProduct) => {\n\n        //check to make sure retail price is currency\n        var regex = /^\\d+(?:\\.\\d{0,2})$/;\n        let retail = finalProduct.retail_price\n\n        //check to make sure inventory is a number\n        let quantity = +finalProduct.quantity\n        let quantity_painted_tree = +finalProduct.quantity_painted_tree\n\n        if (!finalProduct.retail_price || (!regex.test(retail))) {\n            alert('The retail price must be entered in the format X.XX')\n        } else if (!finalProduct.quantity || isNaN(quantity)) {\n            alert('Inventory must be entered as a whole number')\n        } else if (!finalProduct.quantity_painted_tree || isNaN(quantity_painted_tree)) {\n            alert('Inventory must be entered as a whole number')        \n        } else {\n            onAddRetail(finalProduct)\n            setReturnedProduct({})\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        }\n    }\n\n\n    //handle back, next and close handle the nav buttons at the bottom of the screen\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    //takes user from entering details to enterin materials - check to make sure all fields are filled in\n    const handleNext = () => {\n        //check to make sure labor is a number\n        let labor = +newProduct.labor\n\n        if (newProduct.product_name == '') {\n            alert('Please enter a product name')\n        } else if (newProduct.category == '') {\n            alert('Please enter a category')\n        } else if (isNaN(labor) || newProduct.labor === '') {\n            alert('Please enter the number of minutes required')\n        } else {\n            setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        }\n    };\n\n    return (\n        <div className=\"addProductsContainer\">\n            <h2>Add New Product</h2>\n            <div className={classes.root}>\n                <Stepper activeStep={activeStep}>\n                    {steps.map((label, index) => {\n                        const stepProps = {};\n                        const labelProps = {};\n\n                        return (\n                            <Step key={label} {...stepProps}>\n                                <StepLabel {...labelProps}>{label}</StepLabel>\n                            </Step>\n\n                        );\n                    })}\n\n                </Stepper>\n                <div>\n                    {activeStep === steps.length ? (\n                        <div>\n                            <Typography className={classes.instructions}>\n                                All steps completed. Your product is now live.\n                            </Typography>\n                        </div>\n                    ) : (\n                            <div>\n                                <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n                                <div>\n                                    <Button disabled={activeStep === 0 || activeStep === 2} onClick={handleBack} className={classes.button}>\n                                        Back\n                                </Button>\n\n                                    {/* this button shows on the first step and takes the input for the product details */}\n                                    {activeStep === 0 ?\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={handleNext}\n                                            className={classes.button}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                        : null}\n\n\n                                    {/* This button shows on the second step and sends all product info to the db */}\n                                    {activeStep === 1 ?\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            //addProductsTODB - line 45\n                                            onClick={() => addProductToDB(newProduct, addedMaterialsList)}\n                                            className={classes.button}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                        : null}\n\n                                    {/* This button shows on the final step and handles taking the input for retail pricing and inventory and sends to the db */}\n                                    {activeStep === 2 ?\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={() => addRetailPriceToDB(returnedProduct)}\n                                            className={classes.button}\n                                            startIcon={<SaveIcon />}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Save' : 'Next'}\n                                        </Button>\n                                        : null}\n                                </div>\n                            </div>\n                        )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state, { materials }) => ({\n    materials: state.materials.materialsList,\n    newReturnedProduct: state.products.newProduct,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    onGetMaterials: GetMaterials(dispatch),\n    onAddProduct: AddProduct(dispatch),\n    onAddRetail: EditProductDetails(dispatch)\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProducts)\n","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/EditSales.jsx",["256","257","258","259","260","261","262"],"import { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { EditSale } from '../use-cases/editSale'\nimport './EditSales.css'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport 'date-fns';\nimport React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport Checkbox from '@material-ui/core/Checkbox'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n    },\n}));\n\n\nconst EditSales = (props, { onEditSale }) => {\n    const classes = useStyles();\n    const [checked, setChecked] = useState(props.saleData.sold_PTM)\n    const [originalSalesData, setOriginalSalesData] = useState(props.saleData)\n    const [updatedSalesData, setUpdatedSalesData] = useState(props.saleData)\n   \n    const handleOnChange = (e) => {\n        setUpdatedSalesData({\n            ...updatedSalesData,\n            [e.target.name]: e.target.value,            \n        })\n    }\n\n    const handleDateChange = (date) => {\n        setUpdatedSalesData({\n            ...updatedSalesData,\n            createdAt: date\n        })\n    };\n\n    const handleCheckChange = (event) => {\n        setChecked(event.target.checked);\n\n        if (event.target.checked === true) {\n            setUpdatedSalesData({\n                ...updatedSalesData,\n                'sold_PTM': true,\n                'sold_to': 'Painted Tree Marketplace'\n            })\n        } else if (event.target.checked === false) {\n            setUpdatedSalesData({\n                ...updatedSalesData,\n                'sold_PTM': false,\n                'sold_to': ''\n            })\n        }\n    };\n\n    const handleOnClick = (data, originalData) => {\n        //check to make sure these fields are numbers\n        const quantity = +data.quantity\n        const price_per_unit = +data.price_per_unit\n        const total_price = +data.total_price\n        const discount = +data.discount\n        const shipping = +data.shipping\n\n        if (data.product_name == '') {\n            alert('Please enter the name of the product you sold')\n        } else if (data.product_category == '') {\n            alert('Please enter the category of the product you sold')\n        } else if (quantity == '' || isNaN(quantity)) {\n            alert('Please enter the quantity sold')\n        } else if (price_per_unit == '' || isNaN(price_per_unit)) {\n            alert('Please enter the price per unit in the format X.XX')\n        } else if (total_price == '' || isNaN(total_price)) {\n            alert('Please enter the total price in the format X.XX')\n        } else if (data.sold_to == '') {\n            alert('Please enter the name of the buyer')\n        } else if (isNaN(discount)) {\n            alert('Please enter a number in the discount field')            \n        } else if (isNaN(shipping)) {\n            alert(\"Please enter a number in the shipping field\")\n        } else {           \n            let saleData = {updated: data, original: originalData}\n            \n            props.onEditSale(saleData)\n            props.closeEditModal()\n        }\n    }\n\n    return (\n        <div className='editSalesContainer'>\n            <h2>Edit Sale</h2>\n            <div>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <TextField name='product_number' value={updatedSalesData.product_number} onChange={handleOnChange} id=\"outlined-basic\" label=\"Product Number\" variant=\"outlined\" />\n                </form>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <TextField name='product_name' value={updatedSalesData.product_name} onChange={handleOnChange} id=\"outlined-basic\" label=\"Product Name\" variant=\"outlined\" />\n                </form>\n                <div>\n                    <label> Sold At Painted Tree MarketPlace\n                    <Checkbox\n                            checked={checked}\n                            onChange={handleCheckChange}\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\n                        /></label>\n                </div>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <TextField name='quantity' value={updatedSalesData.quantity} onChange={handleOnChange} id=\"outlined-basic\" label=\"Quantity\" variant=\"outlined\" />\n                </form>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <TextField name='price_per_unit' value={updatedSalesData.price_per_unit} onChange={handleOnChange} id=\"outlined-basic\" label=\"Price Per Unit\" variant=\"outlined\" />\n                </form>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <TextField name='discount' value={updatedSalesData.discount} onChange={handleOnChange} id=\"outlined-basic\" label=\"Discount\" variant=\"outlined\" />\n                </form>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <TextField name='tax' value={updatedSalesData.tax} onChange={handleOnChange} id=\"outlined-basic\" label=\"Total Tax Amount\" variant=\"outlined\" />\n                </form>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <TextField name='shipping' value={updatedSalesData.shipping} onChange={handleOnChange} id=\"outlined-basic\" label=\"Shipping Amount\" variant=\"outlined\" />\n                </form>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <TextField name='total_price' value={updatedSalesData.total_price} onChange={handleOnChange} id=\"outlined-basic\" label=\"Total Sales Price\" variant=\"outlined\" />\n                </form>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <TextField name='product_category' value={updatedSalesData.product_category} onChange={handleOnChange} id=\"outlined-basic\" label=\"Category\" variant=\"outlined\" />\n                </form>\n                <form className={classes.root} noValidate autoComplete=\"off\">\n                    <TextField name='sold_to' value={updatedSalesData.sold_to} onChange={handleOnChange} id=\"outlined-basic\" label=\"Purchased By\" variant=\"outlined\" />\n                </form>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                        margin=\"normal\"\n                        name=\"createdAt\"\n                        id=\"date-picker-dialog\"\n                        label=\"Sales Date\"\n                        format=\"MM/dd/yyyy\"\n                        value={updatedSalesData.createdAt}\n                        onChange={handleDateChange}\n                        KeyboardButtonProps={{\n                            'aria-label': 'change date',\n                        }}\n                        fullWidth\n                    />\n                </MuiPickersUtilsProvider>\n            </div>\n            <div>\n                <Button onClick={() => handleOnClick(updatedSalesData, originalSalesData)} fullWidth startIcon={<SaveIcon />} variant=\"contained\" color=\"secondary\">\n                    Save\n                </Button>\n\n            </div>\n        </div>\n    )\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    onEditSale: EditSale(dispatch),\n\n})\nexport default connect(null, mapDispatchToProps)(EditSales)","/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/AddSales.jsx",["263","264","265"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/editProduct.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/addProduct.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/getMaterials.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/addSale.js",["266"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/editSale.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/editWholesale.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/addMaterialItem.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/deleteMaterialItem.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/getProductByID.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/excelMaterialsReports.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/deleteMaterial.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/EditMaterials.jsx",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/ui/AddMaterials.jsx",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/data-tables/use-cases/editMaterial.js",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/login/ui/forgotPassword.jsx",["267","268","269"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/Dashboard.jsx",["270","271","272","273","274","275","276","277","278","279"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/BarChart.jsx",["280","281"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/PieChart2.jsx",["282","283","284","285","286","287","288","289","290","291","292","293","294"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/LineGraph.jsx",[],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/SalesBarChart.jsx",["295","296","297","298","299"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/SalesPieChart.jsx",["300","301","302","303","304","305","306","307","308","309","310","311","312","313"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/PtmSalesPieChart.jsx",["314","315","316","317","318","319","320","321","322","323","324","325","326","327"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/BarChart2.jsx",["328","329","330","331","332","333"],"/Users/chapmanchappelle/Desktop/repos/silverthread/silver-thread-client/src/dashboard/ui/PieChart.jsx",["334","335","336","337","338","339"],{"ruleId":"340","severity":1,"message":"341","line":18,"column":8,"nodeType":"342","messageId":"343","endLine":18,"endColumn":13},{"ruleId":"340","severity":1,"message":"344","line":19,"column":8,"nodeType":"342","messageId":"343","endLine":19,"endColumn":14},{"ruleId":"345","severity":1,"message":"346","line":106,"column":5,"nodeType":"347","messageId":"348","endLine":106,"endColumn":14},{"ruleId":"345","severity":1,"message":"349","line":116,"column":11,"nodeType":"347","messageId":"348","endLine":116,"endColumn":20},{"ruleId":"340","severity":1,"message":"350","line":1,"column":10,"nodeType":"342","messageId":"343","endLine":1,"endColumn":25},{"ruleId":"340","severity":1,"message":"351","line":1,"column":27,"nodeType":"342","messageId":"343","endLine":1,"endColumn":38},{"ruleId":"340","severity":1,"message":"352","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":26},{"ruleId":"340","severity":1,"message":"353","line":10,"column":10,"nodeType":"342","messageId":"343","endLine":10,"endColumn":17},{"ruleId":"340","severity":1,"message":"354","line":11,"column":10,"nodeType":"342","messageId":"343","endLine":11,"endColumn":19},{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","replacedBy":"358"},{"ruleId":"340","severity":1,"message":"353","line":10,"column":10,"nodeType":"342","messageId":"343","endLine":10,"endColumn":17},{"ruleId":"359","severity":1,"message":"360","line":27,"column":7,"nodeType":"361","endLine":27,"endColumn":9,"suggestions":"362"},{"ruleId":"363","severity":1,"message":"364","line":34,"column":1,"nodeType":"365","endLine":34,"endColumn":23},{"ruleId":"363","severity":1,"message":"364","line":218,"column":1,"nodeType":"365","endLine":218,"endColumn":65},{"ruleId":"359","severity":1,"message":"366","line":67,"column":7,"nodeType":"361","endLine":67,"endColumn":53,"suggestions":"367"},{"ruleId":"359","severity":1,"message":"368","line":51,"column":8,"nodeType":"361","endLine":51,"endColumn":48,"suggestions":"369"},{"ruleId":"370","severity":1,"message":"371","line":164,"column":33,"nodeType":"372","messageId":"348","endLine":164,"endColumn":36},{"ruleId":"340","severity":1,"message":"373","line":18,"column":13,"nodeType":"342","messageId":"343","endLine":18,"endColumn":22},{"ruleId":"340","severity":1,"message":"374","line":4,"column":10,"nodeType":"342","messageId":"343","endLine":4,"endColumn":23},{"ruleId":"340","severity":1,"message":"375","line":58,"column":11,"nodeType":"342","messageId":"343","endLine":58,"endColumn":15},{"ruleId":"340","severity":1,"message":"376","line":58,"column":17,"nodeType":"342","messageId":"343","endLine":58,"endColumn":24},{"ruleId":"359","severity":1,"message":"377","line":68,"column":7,"nodeType":"361","endLine":68,"endColumn":41,"suggestions":"378"},{"ruleId":"359","severity":1,"message":"379","line":55,"column":8,"nodeType":"361","endLine":55,"endColumn":54,"suggestions":"380"},{"ruleId":"381","severity":1,"message":"382","line":86,"column":9,"nodeType":"383","messageId":"384","endLine":170,"endColumn":10},{"ruleId":"385","severity":1,"message":"386","line":118,"column":51,"nodeType":"387","messageId":"348","endLine":118,"endColumn":53},{"ruleId":"370","severity":1,"message":"371","line":271,"column":33,"nodeType":"372","messageId":"348","endLine":271,"endColumn":36},{"ruleId":"359","severity":1,"message":"366","line":48,"column":8,"nodeType":"361","endLine":48,"endColumn":10,"suggestions":"388"},{"ruleId":"359","severity":1,"message":"389","line":57,"column":8,"nodeType":"361","endLine":57,"endColumn":28,"suggestions":"390"},{"ruleId":"385","severity":1,"message":"386","line":114,"column":51,"nodeType":"387","messageId":"348","endLine":114,"endColumn":53},{"ruleId":"385","severity":1,"message":"386","line":137,"column":71,"nodeType":"387","messageId":"348","endLine":137,"endColumn":73},{"ruleId":"385","severity":1,"message":"386","line":139,"column":60,"nodeType":"387","messageId":"348","endLine":139,"endColumn":62},{"ruleId":"385","severity":1,"message":"391","line":160,"column":98,"nodeType":"387","messageId":"348","endLine":160,"endColumn":100},{"ruleId":"385","severity":1,"message":"386","line":294,"column":37,"nodeType":"387","messageId":"348","endLine":294,"endColumn":39},{"ruleId":"385","severity":1,"message":"386","line":296,"column":40,"nodeType":"387","messageId":"348","endLine":296,"endColumn":42},{"ruleId":"340","severity":1,"message":"392","line":28,"column":31,"nodeType":"342","messageId":"343","endLine":28,"endColumn":51},{"ruleId":"385","severity":1,"message":"386","line":71,"column":31,"nodeType":"387","messageId":"348","endLine":71,"endColumn":33},{"ruleId":"385","severity":1,"message":"386","line":73,"column":42,"nodeType":"387","messageId":"348","endLine":73,"endColumn":44},{"ruleId":"385","severity":1,"message":"386","line":75,"column":29,"nodeType":"387","messageId":"348","endLine":75,"endColumn":31},{"ruleId":"385","severity":1,"message":"386","line":77,"column":35,"nodeType":"387","messageId":"348","endLine":77,"endColumn":37},{"ruleId":"385","severity":1,"message":"386","line":79,"column":32,"nodeType":"387","messageId":"348","endLine":79,"endColumn":34},{"ruleId":"385","severity":1,"message":"386","line":81,"column":33,"nodeType":"387","messageId":"348","endLine":81,"endColumn":35},{"ruleId":"359","severity":1,"message":"368","line":21,"column":7,"nodeType":"361","endLine":21,"endColumn":9,"suggestions":"393"},{"ruleId":"385","severity":1,"message":"386","line":44,"column":35,"nodeType":"387","messageId":"348","endLine":44,"endColumn":37},{"ruleId":"385","severity":1,"message":"386","line":83,"column":52,"nodeType":"387","messageId":"348","endLine":83,"endColumn":54},{"ruleId":"340","severity":1,"message":"394","line":2,"column":10,"nodeType":"342","messageId":"343","endLine":2,"endColumn":17},{"ruleId":"340","severity":1,"message":"352","line":1,"column":17,"nodeType":"342","messageId":"343","endLine":1,"endColumn":26},{"ruleId":"340","severity":1,"message":"353","line":10,"column":10,"nodeType":"342","messageId":"343","endLine":10,"endColumn":17},{"ruleId":"340","severity":1,"message":"354","line":11,"column":10,"nodeType":"342","messageId":"343","endLine":11,"endColumn":19},{"ruleId":"340","severity":1,"message":"395","line":3,"column":21,"nodeType":"342","messageId":"343","endLine":3,"endColumn":27},{"ruleId":"340","severity":1,"message":"396","line":3,"column":29,"nodeType":"342","messageId":"343","endLine":3,"endColumn":39},{"ruleId":"340","severity":1,"message":"397","line":3,"column":41,"nodeType":"342","messageId":"343","endLine":3,"endColumn":45},{"ruleId":"340","severity":1,"message":"398","line":3,"column":53,"nodeType":"342","messageId":"343","endLine":3,"endColumn":61},{"ruleId":"340","severity":1,"message":"399","line":8,"column":8,"nodeType":"342","messageId":"343","endLine":8,"endColumn":16},{"ruleId":"340","severity":1,"message":"400","line":9,"column":8,"nodeType":"342","messageId":"343","endLine":9,"endColumn":16},{"ruleId":"340","severity":1,"message":"401","line":10,"column":8,"nodeType":"342","messageId":"343","endLine":10,"endColumn":17},{"ruleId":"340","severity":1,"message":"402","line":12,"column":8,"nodeType":"342","messageId":"343","endLine":12,"endColumn":17},{"ruleId":"340","severity":1,"message":"403","line":13,"column":8,"nodeType":"342","messageId":"343","endLine":13,"endColumn":21},{"ruleId":"340","severity":1,"message":"404","line":58,"column":11,"nodeType":"342","messageId":"343","endLine":58,"endColumn":16},{"ruleId":"340","severity":1,"message":"405","line":2,"column":8,"nodeType":"342","messageId":"343","endLine":2,"endColumn":16},{"ruleId":"340","severity":1,"message":"406","line":7,"column":7,"nodeType":"342","messageId":"343","endLine":7,"endColumn":11},{"ruleId":"340","severity":1,"message":"407","line":3,"column":22,"nodeType":"342","messageId":"343","endLine":3,"endColumn":34},{"ruleId":"340","severity":1,"message":"408","line":3,"column":36,"nodeType":"342","messageId":"343","endLine":3,"endColumn":49},{"ruleId":"340","severity":1,"message":"409","line":3,"column":51,"nodeType":"342","messageId":"343","endLine":3,"endColumn":63},{"ruleId":"340","severity":1,"message":"410","line":3,"column":66,"nodeType":"342","messageId":"343","endLine":3,"endColumn":82},{"ruleId":"340","severity":1,"message":"411","line":3,"column":84,"nodeType":"342","messageId":"343","endLine":3,"endColumn":96},{"ruleId":"340","severity":1,"message":"412","line":4,"column":16,"nodeType":"342","messageId":"343","endLine":4,"endColumn":27},{"ruleId":"340","severity":1,"message":"413","line":4,"column":42,"nodeType":"342","messageId":"343","endLine":4,"endColumn":51},{"ruleId":"340","severity":1,"message":"414","line":4,"column":53,"nodeType":"342","messageId":"343","endLine":4,"endColumn":59},{"ruleId":"340","severity":1,"message":"415","line":6,"column":10,"nodeType":"342","messageId":"343","endLine":6,"endColumn":22},{"ruleId":"340","severity":1,"message":"406","line":40,"column":9,"nodeType":"342","messageId":"343","endLine":40,"endColumn":13},{"ruleId":"340","severity":1,"message":"416","line":54,"column":10,"nodeType":"342","messageId":"343","endLine":54,"endColumn":16},{"ruleId":"340","severity":1,"message":"417","line":54,"column":18,"nodeType":"342","messageId":"343","endLine":54,"endColumn":27},{"ruleId":"359","severity":1,"message":"418","line":61,"column":8,"nodeType":"361","endLine":61,"endColumn":10,"suggestions":"419"},{"ruleId":"340","severity":1,"message":"412","line":3,"column":16,"nodeType":"342","messageId":"343","endLine":3,"endColumn":27},{"ruleId":"340","severity":1,"message":"413","line":3,"column":42,"nodeType":"342","messageId":"343","endLine":3,"endColumn":51},{"ruleId":"340","severity":1,"message":"414","line":3,"column":53,"nodeType":"342","messageId":"343","endLine":3,"endColumn":59},{"ruleId":"340","severity":1,"message":"420","line":42,"column":23,"nodeType":"342","messageId":"343","endLine":42,"endColumn":38},{"ruleId":"359","severity":1,"message":"421","line":51,"column":8,"nodeType":"361","endLine":51,"endColumn":10,"suggestions":"422"},{"ruleId":"340","severity":1,"message":"407","line":3,"column":22,"nodeType":"342","messageId":"343","endLine":3,"endColumn":34},{"ruleId":"340","severity":1,"message":"408","line":3,"column":36,"nodeType":"342","messageId":"343","endLine":3,"endColumn":49},{"ruleId":"340","severity":1,"message":"409","line":3,"column":51,"nodeType":"342","messageId":"343","endLine":3,"endColumn":63},{"ruleId":"340","severity":1,"message":"410","line":3,"column":66,"nodeType":"342","messageId":"343","endLine":3,"endColumn":82},{"ruleId":"340","severity":1,"message":"411","line":3,"column":84,"nodeType":"342","messageId":"343","endLine":3,"endColumn":96},{"ruleId":"340","severity":1,"message":"412","line":4,"column":16,"nodeType":"342","messageId":"343","endLine":4,"endColumn":27},{"ruleId":"340","severity":1,"message":"413","line":4,"column":42,"nodeType":"342","messageId":"343","endLine":4,"endColumn":51},{"ruleId":"340","severity":1,"message":"414","line":4,"column":53,"nodeType":"342","messageId":"343","endLine":4,"endColumn":59},{"ruleId":"340","severity":1,"message":"415","line":6,"column":10,"nodeType":"342","messageId":"343","endLine":6,"endColumn":22},{"ruleId":"340","severity":1,"message":"406","line":40,"column":9,"nodeType":"342","messageId":"343","endLine":40,"endColumn":13},{"ruleId":"340","severity":1,"message":"416","line":54,"column":10,"nodeType":"342","messageId":"343","endLine":54,"endColumn":16},{"ruleId":"340","severity":1,"message":"417","line":54,"column":18,"nodeType":"342","messageId":"343","endLine":54,"endColumn":27},{"ruleId":"340","severity":1,"message":"420","line":65,"column":23,"nodeType":"342","messageId":"343","endLine":65,"endColumn":38},{"ruleId":"359","severity":1,"message":"421","line":74,"column":8,"nodeType":"361","endLine":74,"endColumn":10,"suggestions":"423"},{"ruleId":"340","severity":1,"message":"407","line":3,"column":22,"nodeType":"342","messageId":"343","endLine":3,"endColumn":34},{"ruleId":"340","severity":1,"message":"408","line":3,"column":36,"nodeType":"342","messageId":"343","endLine":3,"endColumn":49},{"ruleId":"340","severity":1,"message":"409","line":3,"column":51,"nodeType":"342","messageId":"343","endLine":3,"endColumn":63},{"ruleId":"340","severity":1,"message":"410","line":3,"column":66,"nodeType":"342","messageId":"343","endLine":3,"endColumn":82},{"ruleId":"340","severity":1,"message":"411","line":3,"column":84,"nodeType":"342","messageId":"343","endLine":3,"endColumn":96},{"ruleId":"340","severity":1,"message":"412","line":4,"column":16,"nodeType":"342","messageId":"343","endLine":4,"endColumn":27},{"ruleId":"340","severity":1,"message":"413","line":4,"column":42,"nodeType":"342","messageId":"343","endLine":4,"endColumn":51},{"ruleId":"340","severity":1,"message":"414","line":4,"column":53,"nodeType":"342","messageId":"343","endLine":4,"endColumn":59},{"ruleId":"340","severity":1,"message":"415","line":6,"column":10,"nodeType":"342","messageId":"343","endLine":6,"endColumn":22},{"ruleId":"340","severity":1,"message":"406","line":40,"column":9,"nodeType":"342","messageId":"343","endLine":40,"endColumn":13},{"ruleId":"340","severity":1,"message":"416","line":54,"column":10,"nodeType":"342","messageId":"343","endLine":54,"endColumn":16},{"ruleId":"340","severity":1,"message":"417","line":54,"column":18,"nodeType":"342","messageId":"343","endLine":54,"endColumn":27},{"ruleId":"340","severity":1,"message":"420","line":65,"column":23,"nodeType":"342","messageId":"343","endLine":65,"endColumn":38},{"ruleId":"359","severity":1,"message":"421","line":74,"column":8,"nodeType":"361","endLine":74,"endColumn":10,"suggestions":"424"},{"ruleId":"340","severity":1,"message":"412","line":3,"column":16,"nodeType":"342","messageId":"343","endLine":3,"endColumn":27},{"ruleId":"340","severity":1,"message":"413","line":3,"column":42,"nodeType":"342","messageId":"343","endLine":3,"endColumn":51},{"ruleId":"340","severity":1,"message":"414","line":3,"column":53,"nodeType":"342","messageId":"343","endLine":3,"endColumn":59},{"ruleId":"340","severity":1,"message":"406","line":30,"column":9,"nodeType":"342","messageId":"343","endLine":30,"endColumn":13},{"ruleId":"340","severity":1,"message":"420","line":49,"column":23,"nodeType":"342","messageId":"343","endLine":49,"endColumn":38},{"ruleId":"359","severity":1,"message":"421","line":56,"column":6,"nodeType":"361","endLine":56,"endColumn":8,"suggestions":"425"},{"ruleId":"340","severity":1,"message":"405","line":2,"column":8,"nodeType":"342","messageId":"343","endLine":2,"endColumn":16},{"ruleId":"340","severity":1,"message":"407","line":3,"column":22,"nodeType":"342","messageId":"343","endLine":3,"endColumn":34},{"ruleId":"340","severity":1,"message":"409","line":3,"column":51,"nodeType":"342","messageId":"343","endLine":3,"endColumn":63},{"ruleId":"340","severity":1,"message":"410","line":3,"column":66,"nodeType":"342","messageId":"343","endLine":3,"endColumn":82},{"ruleId":"426","severity":1,"message":"427","line":95,"column":13,"nodeType":"428","messageId":"429","endLine":107,"endColumn":7},{"ruleId":"430","severity":1,"message":"431","line":95,"column":13,"nodeType":"428","messageId":"432","endLine":107,"endColumn":7},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Logout' is defined but never used.","no-dupe-keys","Duplicate key 'overrides'.","ObjectExpression","unexpected","Duplicate key '@global'.","'combineReducers' is defined but never used.","'createStore' is defined but never used.","'useEffect' is defined but never used.","'onLogin' is defined but never used.","'UserLogin' is defined but never used.","no-native-reassign",["433"],"no-negated-in-lhs",["434"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLoggedUser'. Either include it or remove the dependency array. If 'getLoggedUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["435"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'onGetMaterials'. Either include it or remove the dependency array. If 'onGetMaterials' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["436"],"React Hook useEffect has a missing dependency: 'onGetProducts'. Either include it or remove the dependency array. If 'onGetProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["437"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'localUser' is assigned a value but never used.","'setAutoFreeze' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onGetSales' and 'selectedDate'. Either include them or remove the dependency array. If 'onGetSales' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["438"],"React Hook useEffect has missing dependencies: 'onGetMaterials', 'onGetProductByID', and 'productData.id'. Either include them or remove the dependency array. If 'onGetProductByID' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["439"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["440"],"React Hook useEffect has a missing dependency: 'activeStep'. Either include it or remove the dependency array.",["441"],"Expected '!==' and instead saw '!='.","'setOriginalSalesData' is assigned a value but never used.",["442"],"'Popover' is defined but never used.","'AppBar' is defined but never used.","'Typography' is defined but never used.","'Grow' is defined but never used.","'GridList' is defined but never used.","'PieChart' is defined but never used.","'BarChart' is defined but never used.","'BarChart2' is defined but never used.","'LineGraph' is defined but never used.","'SalesPieChart' is defined but never used.","'theme' is assigned a value but never used.","'ReactDOM' is defined but never used.","'data' is assigned a value but never used.","'VictoryChart' is defined but never used.","'VictoryLegend' is defined but never used.","'VictoryLabel' is defined but never used.","'VictoryContainer' is defined but never used.","'VictoryGroup' is defined but never used.","'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'Button' is defined but never used.","'Autocomplete' is defined but never used.","'loaded' is assigned a value but never used.","'setLoaded' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array. If 'getProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["443"],"'setSelectedDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getSales' and 'selectedDate'. Either include them or remove the dependency array. If 'getSales' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["444"],["445"],["446"],["447"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"466","fix":"468"},{"desc":"466","fix":"469"},{"desc":"466","fix":"470"},"Update the dependencies array to be: [getLoggedUser]",{"range":"471","text":"472"},"Update the dependencies array to be: [materialsEdit, materialsDelete, materialsAdd, onGetMaterials]",{"range":"473","text":"474"},"Update the dependencies array to be: [productDelete, productAdd, productEdit, onGetProducts]",{"range":"475","text":"476"},"Update the dependencies array to be: [salesAdd, salesEdit, salesDelete, onGetSales, selectedDate]",{"range":"477","text":"478"},"Update the dependencies array to be: [materialDelete, newMaterialItem, editProduct, productData.id, onGetProductByID, onGetMaterials]",{"range":"479","text":"480"},"Update the dependencies array to be: [onGetMaterials]",{"range":"481","text":"482"},"Update the dependencies array to be: [activeStep, newReturnedProduct]",{"range":"483","text":"484"},"Update the dependencies array to be: [onGetProducts]",{"range":"485","text":"486"},"Update the dependencies array to be: [getProducts]",{"range":"487","text":"488"},"Update the dependencies array to be: [getSales, selectedDate]",{"range":"489","text":"490"},{"range":"491","text":"490"},{"range":"492","text":"490"},{"range":"493","text":"490"},[711,713],"[getLoggedUser]",[1957,2003],"[materialsEdit, materialsDelete, materialsAdd, onGetMaterials]",[1671,1711],"[productDelete, productAdd, productEdit, onGetProducts]",[1814,1848],"[salesAdd, salesEdit, salesDelete, onGetSales, selectedDate]",[2049,2095],"[materialDelete, newMaterialItem, editProduct, productData.id, onGetProductByID, onGetMaterials]",[1827,1829],"[onGetMaterials]",[2225,2245],"[activeStep, newReturnedProduct]",[781,783],"[onGetProducts]",[1553,1555],"[getProducts]",[1226,1228],"[getSales, selectedDate]",[1844,1846],[1843,1845],[1280,1282]]